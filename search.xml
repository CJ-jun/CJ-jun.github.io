<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法篇2链表内指定区间反转</title>
      <link href="/2024/02/16/%E7%AE%97%E6%B3%95%E7%AF%872%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/"/>
      <url>/2024/02/16/%E7%AE%97%E6%B3%95%E7%AF%872%E9%93%BE%E8%A1%A8%E5%86%85%E6%8C%87%E5%AE%9A%E5%8C%BA%E9%97%B4%E5%8F%8D%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<p>题单地址：<a href="https://www.nowcoder.com/link/pc_kol_wsx">https://www.nowcoder.com/link/pc_kol_wsx</a></p><p>本系列将会从头到尾采取动画的形式细致的讲解所有的题目，每道题目都会结合动画、图片、详细的注释进行分析，确保每个人都能看懂。</p><h2 id="一、题目描述"><a href="#一、题目描述" class="headerlink" title="一、题目描述"></a>一、题目描述</h2><p>将一个结点数为 size 链表 <strong>m</strong> <strong>位置到</strong> <strong>n</strong> <strong>位置之间的区间</strong>反转，要求时间复杂度 O(n)，空间复杂度 O(1)。</p><p><img src="https://superblog-1257126549.cos.ap-guangzhou.myqcloud.com/202303280952011.png"></p><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><p>输入：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;,<span class="number">2</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><p>返回值：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="二、题目解析"><a href="#二、题目解析" class="headerlink" title="二、题目解析"></a>二、题目解析</h2><p>1、构建一个虚拟结点，让它指向原链表的头结点。</p><p>2、设置两个指针，pre 指针指向以 <strong>虚拟头结点为链表的头部位置</strong>，cur 指针指向 <strong>原链表</strong>的头部位置。</p><p>3、让着两个指针向前移动，直到 pre 指向了 <strong>第一个要反转的结点的前面那个结点</strong>，而 cur 指向了翻转区域里面的第一个结点。</p><p>4、开始指向翻转操作</p><ul><li>1）、设置临时变量 temp，temp 是 cur 的 next 位置，保存当前需要翻转结点的后面的结点，我们需要交换 temp 和 cur</li><li>2）、让 cur 的 next 位置变成 temp 的下一个结点</li><li>3）、让 temp 的 next 位置变成 cur</li><li>4）、让 pre 的 next 位置变成 temp</li></ul><p><img src="https://superblog-1257126549.cos.ap-guangzhou.myqcloud.com/202303281015724.gif"></p><h2 id="三、参考代码"><a href="#三、参考代码" class="headerlink" title="三、参考代码"></a>三、参考代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> head ListNode类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> m int整型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n int整型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ListNode类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">reverseBetween</span><span class="params">(ListNode head, <span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 一开始设置一个虚拟节点，它的值为 -1，它的值可以设置为任何的数，因为我们根本不需要使用它的值</span></span><br><span class="line">        <span class="comment">// 设置虚拟节点的目的是为了让原链表中所有节点就都可以按照统一的方式进行翻转</span></span><br><span class="line">        <span class="comment">// 比如如果翻转的区间包含了原链表中的第一个位置，那么如果不设置 dummy</span></span><br><span class="line">        <span class="comment">// 在翻转的过程中需要设置其它的临时变量来保持第一位置节点的指针</span></span><br><span class="line">        <span class="comment">// 具体可以通过动画来理解</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 让虚拟节点指向原链表的头部</span></span><br><span class="line">        dummy.next = head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置一个指针，指向以虚拟头节点为链表的头部位置</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> dummy;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置一个指针，指向原链表的头部位置</span></span><br><span class="line"></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从虚拟头节点出发，pre 走 m - 1 步找到需要翻转的左区间</span></span><br><span class="line">        <span class="comment">// for 循环结束后，pre 的右节点是需要翻转的节点</span></span><br><span class="line">        <span class="comment">// for 循环结束后，cur 指向的就是需要翻转的节点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// pre 不断的向右移动，直到走到翻转的左区间为止</span></span><br><span class="line">            pre = pre.next;</span><br><span class="line">            <span class="comment">// cur 不断的向右移动，找到了需要翻转的第一个节点</span></span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开始翻转这些节点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n - m; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置临时变量，保存当前需要翻转节点的后面的节点</span></span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> cur.next;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 这个时候，让 temp 和 cur 两个节点翻转一下</span></span><br><span class="line">            <span class="comment">// 比如，一开始 i = 0 的时候 cur 为 2， temp 为 3</span></span><br><span class="line">            <span class="comment">// 执行完下面的代码，如果原链表是</span></span><br><span class="line">            <span class="comment">// 1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5</span></span><br><span class="line">            <span class="comment">// 变成了</span></span><br><span class="line">            <span class="comment">// 1 --&gt; 3 --&gt; 2 --&gt; 4 --&gt; 5</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// cur 的下一节点是等号右侧的值</span></span><br><span class="line">            <span class="comment">// i = 0 的时候， cur 为 2，cur.next.next 的值是 4</span></span><br><span class="line">            <span class="comment">// 所以，这行代码让 cur 的下一节点不是 3 ，而是 4</span></span><br><span class="line">            <span class="comment">// 2 --&gt; 4</span></span><br><span class="line">            <span class="comment">// 等价于 cur.next = temp.next</span></span><br><span class="line">            cur.next = cur.next.next;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// temp 的下一节点是等号右侧的值</span></span><br><span class="line">            <span class="comment">// i = 0 的时候， temp 为 3，pre 为 1，pre 下一节点的值是 2</span></span><br><span class="line">            <span class="comment">// 所以，这行代码让 temp 的下一节点不是 4 ，而是 2</span></span><br><span class="line">            <span class="comment">// 3 --&gt; 2</span></span><br><span class="line">            temp.next = pre.next;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// pre 的下一节点是等号右侧的值</span></span><br><span class="line">            <span class="comment">// i = 0 的时候， pre 为 1，temp 的值是 3</span></span><br><span class="line">            <span class="comment">// 所以，这行代码让 pre 的下一节点为 3</span></span><br><span class="line">            <span class="comment">// 1 --&gt; 3</span></span><br><span class="line"></span><br><span class="line">            pre.next =temp;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// i = 0 结束之后，链表变成了</span></span><br><span class="line">            <span class="comment">// 1 --&gt; 3 --&gt; 2 --&gt; 4 --&gt; 5</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最后返回虚拟头节点的下一个节点，因为虚拟节点不在链表中</span></span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法篇1反转链表</title>
      <link href="/2024/02/16/%E7%AE%97%E6%B3%95%E7%AF%871%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
      <url>/2024/02/16/%E7%AE%97%E6%B3%95%E7%AF%871%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、描述"><a href="#一、描述" class="headerlink" title="一、描述"></a>一、描述</h2><p>给定一个单链表的头结点pHead(该头节点是有值的，比如在下图，它的val是1)，长度为n，反转该链表后，返回新链表的表头。</p><p>数据范围： 0≤<em>n</em>≤1000</p><p>要求：空间复杂度 O*(1) ，时间复杂度<em>O</em>(*n) 。</p><p>如当输入链表{1,2,3}时，</p><p>经反转后，原链表变为{3,2,1}，所以对应的输出为{3,2,1}。</p><p>以上转换过程如下图所示：</p><img src="https://uploadfiles.nowcoder.com/images/20211014/423483716_1634206291971/4A47A0DB6E60853DEDFCFDF08A5CA249"><h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h2><p>输入：{1,2,3}</p><p>返回值：{3,2,1}</p><h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h2><p>输入：{}</p><p>返回值：{}</p><p>说明： 空链表则输出空             </p><h2 id="二、题目解析"><a href="#二、题目解析" class="headerlink" title="二、题目解析"></a>二、题目解析</h2><p>反转链表是非常经典的一道算法题，它的解法非常之多，而递归、迭代是我们最需要掌握的两种，其中<strong>递归</strong>的代码非常简洁，但很难理解。</p><p>我们再来回顾一下递归的模板，终止条件，递归调用，逻辑处理。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public ListNode reverseList(参数0) &#123;</span><br><span class="line">    if (终止条件)</span><br><span class="line">        return;</span><br><span class="line"></span><br><span class="line">    逻辑处理（可能有，也可能没有，具体问题具体分析）</span><br><span class="line"></span><br><span class="line">    //递归调用</span><br><span class="line">    ListNode reverse = reverseList(参数1);</span><br><span class="line"></span><br><span class="line">    逻辑处理（可能有，也可能没有，具体问题具体分析）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>终止条件就是链表为空，或者是链表没有尾结点的时候，直接返回</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> head;</span><br></pre></td></tr></table></figure><p>递归调用是要从当前节点的下一个结点开始递归。逻辑处理这块是要把当前节点挂到递归之后的链表的末尾，看下代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">//建节点</span><br><span class="line">/*</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *   int val;</span><br><span class="line"> *   ListNode next = null;</span><br><span class="line"> *   public ListNode(int val) &#123;</span><br><span class="line"> *     this.val = val;</span><br><span class="line"> *   &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">public class Solution &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span><br><span class="line">     *</span><br><span class="line">     * </span><br><span class="line">     * @param head ListNode类 </span><br><span class="line">     * @return ListNode类</span><br><span class="line">     */</span><br><span class="line">    public ListNode ReverseList (ListNode head) &#123;</span><br><span class="line">        // write code here</span><br><span class="line">        //终止条件</span><br><span class="line">        if(head == null || head.next == null)&#123;</span><br><span class="line">        return head;</span><br><span class="line">&#125;</span><br><span class="line">//cur到5后返回head=4</span><br><span class="line">ListNode cur = ReverseList(head.next);</span><br><span class="line">//head的下下节点指向前一个</span><br><span class="line">head.next.next = head;</span><br><span class="line">//head=4本来指向5，现在断开了指向空</span><br><span class="line">head.next = null;</span><br><span class="line"></span><br><span class="line">return cur</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL常用语句</title>
      <link href="/2024/02/16/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/02/16/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><blockquote><p>😀如果对你有帮助的话😊<br>🌺为博主评论点个赞吧 👍<br>👍评论是对博主最大的鼓励😋<br>💓爱心发射~💓</p></blockquote><h4 id="MySQL目录（共7章）"><a href="#MySQL目录（共7章）" class="headerlink" title="MySQL目录（共7章）"></a>MySQL目录（共7章）</h4><ul><li><p><a href="#mysql-8">一、初识MySQL</a></p><ul><li><a href="#11--12">1.1 为什么学习数据库</a></li><li><a href="#12--24">1.2 什么是数据库</a></li><li><a href="#13-dbms-48">1.3 什么是DBMS</a></li><li><a href="#14-mysql-64">1.4 MySQL简介</a></li><li><a href="#15-mysql-86">1.5 安装MySQL</a></li><li><a href="#16--100">1.6 安装步骤</a></li><li><a href="#17-sqlyog-181">1.7 安装SQLyog</a></li><li><ul><li><a href="#-207">我的操作</a></li></ul></li><li><a href="#18--226">1.8 连接数据库</a></li></ul></li><li><p><a href="#--287">二、 操作数据库</a></p></li><li><ul><li><ul><li><a href="#-289">我的操作</a></li></ul></li><li><a href="#21--297">2.1 结构化查询语句分类</a></li><li><a href="#22--301">2.2 数据库操作</a></li><li><ul><li><a href="#221--303">2.2.1 命令行操作数据库</a></li></ul></li><li><a href="#23--346">2.3 创建数据表</a></li><li><a href="#24--363">2.4 数据值和列类型</a></li><li><ul><li><a href="#1--367">1. 数值类型</a></li><li><a href="#2--371">2. 字符串类型</a></li><li><a href="#3--375">3. 日期和时间型数值类型</a></li><li><a href="#4-null-379">4. NULL值</a></li></ul></li><li><a href="#25--386">2.5 数据字段属性（&#x3D;&#x3D;重点&#x3D;&#x3D;）</a></li><li><a href="#26--452">2.6 创建数据库表</a></li><li><a href="#27--497">2.7 数据表的类型</a></li><li><ul><li><a href="#1--499">1. 设置数据表的类型</a></li><li><a href="#2--536">2. 数据表的存储位置</a></li><li><a href="#3--568">3. 设置数据表字符集</a></li></ul></li><li><a href="#28--589">2.8 修改删除表</a></li></ul></li><li><p><a href="#mysql-622">三、MySQL数据管理</a></p></li><li><ul><li><a href="#31--626">3.1 外键（了解即可）</a></li><li><ul><li><a href="#1--628">1. 外键概念</a></li><li><a href="#2--640">2. 创建外键</a></li><li><a href="#3--712">3. 删除外键</a></li></ul></li><li><a href="#32-dml-730">3.2 DML语言（&#x3D;&#x3D;全部记住&#x3D;&#x3D;）</a></li><li><a href="#33--insert-751">3.3 添加数据 insert</a></li><li><a href="#34--816">3.4 修改数据</a></li><li><ul><li><a href="#1-update-820">1. update命令</a></li><li><a href="#1-where-857">1. where条件子句</a></li></ul></li><li><a href="#35--876">3.5 删除数据</a></li><li><ul><li><a href="#1-delete-878">1. delete命令</a></li><li><a href="#2-truncate-896">2. truncate命令</a></li><li><a href="#truncate--delete--910">注意：truncate 区别于 delete 命令</a></li></ul></li></ul></li><li><p><a href="#-dql-959">四、 DQL查询数据（&#x3D;&#x3D;最重点&#x3D;&#x3D;）</a></p></li><li><ul><li><a href="#41-dql-961">4.1 DQL语言</a></li><li><ul><li><a href="#1-dql-data-query-language---963">1. DQL( Data Query Language 数据查询语言 )</a></li><li><a href="#2-select-1060">2. SELECT语法</a></li></ul></li><li><a href="#42--1079">4.2 指定查询字段</a></li><li><ul><li><a href="#1-as--1091">1. AS 子句作为别名</a></li><li><a href="#2-distinct--1113">2. distinct 关键字的使用</a></li><li><a href="#3--1128">3. 使用表达式的列</a></li></ul></li><li><a href="#43-where-1153">4.3 where条件语句</a></li><li><ul><li><a href="#1--1159">1. 逻辑操作符</a></li><li><a href="#2---1194">2. 模糊查询 ：比较操作符</a></li></ul></li><li><a href="#44--1263">4.4 连接查询（联表）</a></li><li><ul><li><a href="#1--join--1265">1. Join 对比</a></li><li><a href="#2--1342">2. 自连接（了解）</a></li></ul></li><li><a href="#45---1409">4.5 排序和分页（经常用 ）</a></li><li><a href="#46--1472">4.6 子查询</a></li></ul></li><li><p><a href="#mysql-1540">五、MySQL函数</a></p></li><li><ul><li><a href="#51--1546">5.1 常用函数</a></li><li><a href="#52--1609">5.2 聚合函数</a></li><li><a href="#53-md5-1667">5.3 数据库级别得MD5加密（扩展）</a></li><li><ul><li><a href="#1-md5-1669">1. MD5简介</a></li><li><a href="#2--1679">2. 实现数据加密</a></li></ul></li><li><a href="#-1727">小结</a></li></ul></li><li><p><a href="#-1788">六、事务</a></p></li><li><ul><li><a href="#61--1790">6.1 什么是事务</a></li><li><a href="#62-acid-acid-1796">6.2 事务——ACID原则（百度 ACID）</a></li><li><a href="#63--1817">6.3 隔离所产生的问题：</a></li><li><ul><li><a href="#1--1819">1. 脏读：</a></li><li><a href="#2--1823">2. 不可重复读</a></li><li><a href="#3--1841">3. 虚读（幻读）</a></li></ul></li><li><a href="#63--1858">6.3 基本语法</a></li></ul></li><li><p><a href="#-1927">七、索引</a></p></li><li><ul><li><a href="#71--1933">7.1 索引的作用</a></li><li><a href="#72--1941">7.2 分类</a></li><li><ul><li><a href="#1--1953">1. 主键索引</a></li><li><a href="#2--1963">2. 唯一索引</a></li><li><a href="#3--1980">3. 常规索引</a></li><li><a href="#4--1999">4. 全文索引</a></li></ul></li><li><a href="#73--2060">7.3 拓展：测试索引</a></li><li><a href="#74--2160">7.4 索引准则</a></li><li><a href="#75--2167">7.5 索引的数据结构</a></li></ul></li><li><p><a href="#-2187">八、用户管理</a></p></li><li><ul><li><a href="#81--2189">8.1 创建新用户</a></li><li><ul><li><a href="#1--2191">1. 创建用户</a></li><li><a href="#2--2199">2. 基本命令</a></li><li><a href="#3--2247">3. 权限解释</a></li></ul></li><li><a href="#82-mysql-2294">8.2 MySQL备份</a></li></ul></li><li><p><a href="#-2341">九、规范化数据库设计</a></p></li><li><ul><li><a href="#91--2343">9.1 为什么需要数据库设计</a></li><li><a href="#92--2415">9.2 三大范式</a></li><li><ul><li><a href="#1--2437">1. 三大范式</a></li></ul></li></ul></li><li><p><a href="#10jdbc-2476">10、JDBC</a></p></li><li><ul><li><a href="#101--2480">10.1 数据库驱动（重点）</a></li><li><a href="#102-jdbc-2493">10.2 JDBC</a></li><li><a href="#103-jdbc-2510">10.3 第一个JDBC程序</a></li><li><a href="#104-statement--2690">10.4 statement 对象</a></li><li><ul><li><a href="#1--2754">1. 代码实现</a></li><li><a href="#2-sql-2923">2. SQL注入问题</a></li></ul></li><li><a href="#105-preparedstatement--2972">10.5 PreparedStatement 对象</a></li><li><a href="#106--3226">10.6 连接数据库</a></li><li><a href="#107--3254">10.7 事务</a></li><li><a href="#108--3291">10.8 数据库连接池</a></li></ul></li></ul><h2 id="一、初识MySQL"><a href="#一、初识MySQL" class="headerlink" title="一、初识MySQL"></a>一、初识MySQL</h2><h3 id="1-1-为什么学习数据库"><a href="#1-1-为什么学习数据库" class="headerlink" title="1.1 为什么学习数据库"></a>1.1 为什么学习数据库</h3><ol><li><p>岗位技能需求</p></li><li><p>现在的世界,得数据者得天下</p></li><li><p>存储数据的方法</p></li><li><p>程序,网站中,大量数据如何长久保存?</p></li><li><p><strong>数据库是几乎软件体系中最核心的一个存在。</strong></p></li></ol><h3 id="1-2-什么是数据库"><a href="#1-2-什么是数据库" class="headerlink" title="1.2 什么是数据库"></a>1.2 什么是数据库</h3><p>数据库 ( <strong>DataBase</strong> , 简称 <strong>DB</strong> )</p><p><strong>概念</strong> : 长期存放在计算机内,有组织,可共享的大量数据的集合,是一个数据 “仓库”</p><p><strong>作用</strong> : 保存,并能安全管理数据(如:增删改查等),减少冗余…</p><p><strong>数据库总览 :</strong></p><ul><li><strong>关系型数据库 ( SQL )</strong></li><li><ul><li><p>MySQL , Oracle , SQL Server , SQLite , DB2 , …</p></li><li><p>关系型数据库通过外键关联来建立表与表之间的关系</p></li></ul></li><li><strong>非关系型数据库 ( NOSQL ) not only</strong></li><li><ul><li><p>Redis , MongoDB , …</p></li><li><p>非关系型数据库通常指数据以对象的形式存储在数据库中，而对象之间的关系通过每个对象自身的属性来决定</p></li></ul></li></ul><h3 id="1-3-什么是DBMS"><a href="#1-3-什么是DBMS" class="headerlink" title="1.3 什么是DBMS"></a>1.3 什么是DBMS</h3><p>数据库管理系统 ( <strong>D</strong>ata <strong>B</strong>ase <strong>M</strong>anagement <strong>S</strong>ystem )</p><p>数据库管理软件 , 科学组织和存储数据 , 高效地获取和维护数据</p><img src="https://img-blog.csdnimg.cn/47d7cce1ef9e46ee826c13fe8dbd2ad7.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>为什么要说这个呢?</p><p>因为我们要学习的MySQL应该算是一个数据库管理系统.</p><h3 id="1-4-MySQL简介"><a href="#1-4-MySQL简介" class="headerlink" title=";  1.4 MySQL简介"></a><a name="14_mysql_64">;</a>  1.4 MySQL简介</h3><img src="https://img-blog.csdnimg.cn/img_convert/e07a7b15191d6c1b001bcefa1823abf6.png"><p><strong>概念 :</strong> 是现在 <strong>流行</strong>的 <strong>开源</strong>的, <strong>免费</strong>的 <strong>关系型</strong>数据库</p><p><strong>历史 :</strong> 由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。（甲骨文）</p><p><strong>特点 :</strong></p><ul><li>免费 , 开源数据库</li><li>小巧 , 功能齐全</li><li>使用便捷</li><li>可运行于Windows或Linux操作系统</li><li>可适用于中小型甚至大型网站应用</li></ul><p><strong>官网 :</strong> <strong><a href="https://www.mysql.com/">https://www.mysql.com/</a></strong></p><h3 id="1-5-安装MySQL"><a href="#1-5-安装MySQL" class="headerlink" title="1.5 安装MySQL"></a>1.5 安装MySQL</h3><p><strong>这里建议大家使用压缩版,安装快,方便.不复杂.</strong></p><p><strong>软件下载</strong></p><p>mysql5.7 64位下载地址:</p><p><code>https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.19-winx64.zip</code></p><p>电脑是64位的就下载使用64位版本的！</p><h3 id="1-6-安装步骤"><a href="#1-6-安装步骤" class="headerlink" title="1.6 安装步骤"></a>1.6 安装步骤</h3><p>1、下载后得到zip压缩包.</p><p>2、解压到自己想要安装到的目录，本人解压到的是D:\Environment\mysql-5.7.19</p><p>3、添加环境变量：我的电脑-&gt;属性-&gt;高级-&gt;环境变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择PATH,在其后面添加: 你的mysql 安装文件下面的bin文件夹</span><br></pre></td></tr></table></figure><p>4、新建mysql配置文件，编辑 my.ini 文件 ,注意替换路径位置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir=D:\software\Environment\mysql-5.7.27\</span><br><span class="line">datadir=D:\software\Environment\mysql-5.7.27\data\</span><br><span class="line">port=3306</span><br><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><p>5、启动管理员模式下的CMD，并将路径切换至mysql下的 <code>bin</code>目录，然后输入 <code>mysqld &amp;#x2013;install</code>(安装mysql)<br><img src="https://img-blog.csdnimg.cn/0f2ad7407bca4b9ba67b4864c5c18c7e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBALUJsdWUu,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p>6、再输入 <code>mysqld --initialize-insecure --user=mysql </code>初始化数据文件</p><p>7、然后再次启动mysql <code>net start mysql</code>然后用命令 <code>mysql &amp;#x2013;u root &amp;#x2013;p </code>进入mysql管理界面（密码可为空）<br><img src="https://img-blog.csdnimg.cn/b121ac548f13468880945da7096782af.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBALUJsdWUu,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p>8、进入界面后更改 <code>root</code>密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update mysql.user set authentication_string=password(&#x27;123456&#x27;) where user=&#x27;root&#x27; and Host = &#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p>9、刷新权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>10、修改 <code>my.ini</code>文件删除最后一句 <code>skip-grant-tables</code></p><p>11、重启mysql即可正常使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mysql</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure><blockquote><p>进入方法</p></blockquote><p><img src="https://img-blog.csdnimg.cn/149e937d9ff941e295e53e3b55092585.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>12、连接上测试出现以下结果就安装好了</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a26371c525691cffe5c3203dd71702ab.png"></p><p>一步步去做 , 理论上是没有任何问题的 .</p><p>如果您以前装过,现在需要重装,一定要将环境清理干净 .</p><p>好了,到这里大家都装好了,因为刚接触,所以我们先不学习命令.</p><p>这里给大家推荐一个工具 : <strong>SQLyog</strong> .</p><p>即便有了可视化工具,可是基本的DOS命名大家还是要记住!</p><h3 id="1-7-安装SQLyog"><a href="#1-7-安装SQLyog" class="headerlink" title="1.7 安装SQLyog"></a>1.7 安装SQLyog</h3><p>可手动操作,管理MySQL数据库的软件工具</p><p>特点 : 简洁 , 易用 , 图形化</p><p><img src="https://img-blog.csdnimg.cn/img_convert/54326ef29f124db75a2e89b175c19c2a.png"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/408c00e643374181994ccca24d05dcb0.png"></p><p>使用SQLyog管理工具自己完成以下操作 :</p><ul><li>连接本地MySQL数据库</li><li>新建MySchool数据库</li><li><ul><li>字段</li><li>GradeID : int(11) , Primary Key (pk)</li><li>GradeName : varchar(50)</li><li>数据库名称MySchool</li><li>新建数据库表(grade)</li></ul></li></ul><p><strong>在历史记录中可以看到相对应的数据库操作的语句</strong></p><h4 id="我的操作"><a href="#我的操作" class="headerlink" title="; 我的操作"></a><a name="_207">;</a> 我的操作</h4><ol><li>新建一个数据库 school</li></ol><p><img src="https://img-blog.csdnimg.cn/7056b4eb14064f458d1be1b1d52823d1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_13,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><ol><li>新建一张表</li></ol><p><img src="https://img-blog.csdnimg.cn/0a4cb8d1e5204516bb6f7777a67f234b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/05102b57bd3040c4acbea2dd81a09ca4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>刷新保存</p><h3 id="1-8-连接数据库"><a href="#1-8-连接数据库" class="headerlink" title="1.8 连接数据库"></a>1.8 连接数据库</h3><p>命令行连接</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p123456</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> authentication_string<span class="operator">=</span>password(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span>  databases；</span><br><span class="line"></span><br><span class="line">use school</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">describe</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> database westos;</span><br><span class="line"></span><br><span class="line">exit;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打开MySQL命令窗口</p><ul><li>在DOS命令行窗口进入 <strong>安装目录\mysql\bin</strong></li><li>可设置环境变量，设置了环境变量，可以在任意目录打开！</li></ul><p><strong>连接数据库语句 :</strong> <code>mysql -h &amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3B;&amp;#x673A;&amp;#x5730;&amp;#x5740; -u &amp;#x7528;&amp;#x6237;&amp;#x540D; -p &amp;#x7528;&amp;#x6237;&amp;#x5BC6;&amp;#x7801;</code></p><p>注意 : -p后面不能加空格,否则会被当做密码的内容,导致登录失败 !</p><p><strong>几个基本的数据库操作命令 :</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> password<span class="operator">=</span>password(<span class="string">&#x27;123456&#x27;</span>)<span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="keyword">show</span> databases; 显示所有数据库</span><br><span class="line">use dbname；</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">describe</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">create</span> database name;</span><br><span class="line">use databasename; 选择数据库</span><br><span class="line"></span><br><span class="line">exit;</span><br><span class="line">? 命令关键词 : 寻求帮助</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、-操作数据库"><a href="#二、-操作数据库" class="headerlink" title="二、 操作数据库"></a>二、 操作数据库</h2><h4 id="我的操作-1"><a href="#我的操作-1" class="headerlink" title="我的操作"></a>我的操作</h4><p>操作数据库 &gt; 操作数据库中的表 &gt; 操作数据库表中的数据</p><p>mysql关键字不分区大小写</p><h3 id="2-1-结构化查询语句分类"><a href="#2-1-结构化查询语句分类" class="headerlink" title="2.1 结构化查询语句分类"></a>2.1 结构化查询语句分类</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/1a65021f64d9bb77a6eef72a5a7cc9c2.png"></p><h3 id="2-2-数据库操作"><a href="#2-2-数据库操作" class="headerlink" title=";  2.2 数据库操作"></a><a name="22__301">;</a>  2.2 数据库操作</h3><h4 id="2-2-1-命令行操作数据库"><a href="#2-2-1-命令行操作数据库" class="headerlink" title="2.2.1 命令行操作数据库"></a>2.2.1 命令行操作数据库</h4><ol><li>创建数据库 :</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database [if <span class="keyword">not</span> <span class="keyword">exists</span>] westos</span><br></pre></td></tr></table></figure><ol><li>删除数据库 :</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> database [if <span class="keyword">exists</span>] 数据库名;<span class="number">3.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>使用数据库</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">USE `school`</span><br></pre></td></tr></table></figure><ol><li>查看数据库 :</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><ol><li>使用数据库 :</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><ol><li>对比工具操作数据库</li></ol><p><strong>学习方法：</strong></p><ul><li>对照SQLyog工具自动生成的语句学习</li><li>固定语法中的单词需要记忆</li></ul><h3 id="2-3-创建数据表"><a href="#2-3-创建数据表" class="headerlink" title="2.3 创建数据表"></a>2.3 创建数据表</h3><p>属于DDL的一种，语法 :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table [if not exists] `&amp;#x8868;&amp;#x540D;`(</span><br><span class="line">   &#x27;&amp;#x5B57;&amp;#x6BB5;&amp;#x540D;1&#x27; &amp;#x5217;&amp;#x7C7B;&amp;#x578B; [&amp;#x5C5E;&amp;#x6027;][&amp;#x7D22;&amp;#x5F15;][&amp;#x6CE8;&amp;#x91CA;],</span><br><span class="line">   &#x27;&amp;#x5B57;&amp;#x6BB5;&amp;#x540D;2&#x27; &amp;#x5217;&amp;#x7C7B;&amp;#x578B; [&amp;#x5C5E;&amp;#x6027;][&amp;#x7D22;&amp;#x5F15;][&amp;#x6CE8;&amp;#x91CA;],</span><br><span class="line">  #...</span><br><span class="line"></span><br><span class="line">   &#x27;&amp;#x5B57;&amp;#x6BB5;&amp;#x540D;n&#x27; &amp;#x5217;&amp;#x7C7B;&amp;#x578B; [&amp;#x5C5E;&amp;#x6027;][&amp;#x7D22;&amp;#x5F15;][&amp;#x6CE8;&amp;#x91CA;]</span><br><span class="line">)[&amp;#x8868;&amp;#x7C7B;&amp;#x578B;][&amp;#x8868;&amp;#x5B57;&amp;#x7B26;&amp;#x96C6;][&amp;#x6CE8;&amp;#x91CA;];</span><br></pre></td></tr></table></figure><p><strong>说明 :</strong> 反引号用于区别MySQL保留字与普通字符而引入的 (键盘esc下面的键).</p><h3 id="2-4-数据值和列类型"><a href="#2-4-数据值和列类型" class="headerlink" title="2.4 数据值和列类型"></a>2.4 数据值和列类型</h3><p>列类型 : 规定数据库中该列存放的数据类型</p><h4 id="1-数值类型"><a href="#1-数值类型" class="headerlink" title="1. 数值类型"></a>1. 数值类型</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/4da887bee057f2f0cfdc0053781dbed3.png"></p><h4 id="2-字符串类型"><a href="#2-字符串类型" class="headerlink" title=";  2. 字符串类型"></a><a name="2__371">;</a>  2. 字符串类型</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/c37879977507d0619cfa34b2d2f4208a.png"></p><h4 id="3-日期和时间型数值类型"><a href="#3-日期和时间型数值类型" class="headerlink" title="3. 日期和时间型数值类型"></a>3. 日期和时间型数值类型</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/9905221c27a790059e98f61214f13056.png"></p><h4 id="4-NULL值"><a href="#4-NULL值" class="headerlink" title=";  4. NULL值"></a><a name="4_null_379">;</a>  4. NULL值</h4><ul><li>理解为 “没有值” 或 “未知值”</li><li>不要用NULL进行算术运算 , 结果仍为NULL</li></ul><h3 id="2-5-数据字段属性（重点）"><a href="#2-5-数据字段属性（重点）" class="headerlink" title="2.5 数据字段属性（重点）"></a>2.5 数据字段属性（重点）</h3><p><strong>UnSigned</strong></p><ul><li>无符号的</li><li>声明该数据列不允许负数 .</li></ul><p><strong>ZEROFILL</strong> —— <strong>zerofill</strong></p><ul><li>0填充的</li><li>不足位数的用0来填充 ， 如int(3)，5则为005</li></ul><p><strong>Auto_InCrement</strong> —— <strong>自增</strong></p><ul><li>自动增长的 , 每添加一条数据 , 自动在上一个记录数上加 1(默认)</li><li>通常用于设置 <strong>主键</strong> , 且为整数类型</li><li>可定义起始值和步长</li><li><ul><li>当前表设置步长(AUTO_INCREMENT&#x3D;100) : 只影响当前表</li><li>SET @@auto_increment_increment&#x3D;5 ; 影响所有使用自增的表(全局)</li></ul></li></ul><p><strong>NULL 和 NOT NULL</strong></p><ul><li>默认为NULL , 即没有插入该列的数值</li><li>如果设置为NOT NULL , 则该列必须有值</li></ul><p><strong>DEFAULT</strong>——默认</p><ul><li>默认的</li><li>用于设置默认值</li><li>例如，性别字段，默认为”男” , 否则为 “女” ; 若无指定该列的值 , 则默认值为”男”的值</li></ul><p><strong>扩展</strong></p><p><img src="https://img-blog.csdnimg.cn/b2210ed8119443689b422d4bf608c2e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student` (</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`sex` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">`address` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE school;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DESC</span> student;</span><br></pre></td></tr></table></figure><h3 id="2-6-创建数据库表"><a href="#2-6-创建数据库表" class="headerlink" title="2.6 创建数据库表"></a>2.6 创建数据库表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">   `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">   `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">   `pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">   `sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;女&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">   `birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">   `address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">   `email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>格式</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] `表名`(</span><br><span class="line">`字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">    `字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">    ······</span><br><span class="line">    `字段名` 列类型 [属性] [索引] [注释],</span><br><span class="line">)[表类型][字符集设置][注释]</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE school</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student</span><br><span class="line"><span class="keyword">DESC</span> student</span><br></pre></td></tr></table></figure><h3 id="2-7-数据表的类型"><a href="#2-7-数据表的类型" class="headerlink" title="2.7 数据表的类型"></a>2.7 数据表的类型</h3><h4 id="1-设置数据表的类型"><a href="#1-设置数据表的类型" class="headerlink" title="1. 设置数据表的类型"></a>1. 设置数据表的类型</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line"></span><br><span class="line">)ENGINE <span class="operator">=</span> MyISAM (<span class="keyword">or</span> InnoDB)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> ENGINES;</span><br></pre></td></tr></table></figure><p>MySQL的数据表的类型 : <strong>MyISAM</strong> , <strong>InnoDB</strong> , HEAP , BOB , CSV等…</p><p>常见的 <code>MyISAM </code>与 <code>InnoDB</code>类型：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/90e2a7f6b6a9cca0ad4c54c41f04d1f4.png"></p><p>经验 ( 适用场合 ) :</p><ul><li>适用 MyISAM : 节约空间及相应速度</li><li>适用 InnoDB : 安全性高 , 事务处理及多用户操作数据表，多表多用户操作</li></ul><h4 id="2-数据表的存储位置"><a href="#2-数据表的存储位置" class="headerlink" title="2. 数据表的存储位置"></a>2. 数据表的存储位置</h4><blockquote><p>所有的数据库文件都存在 data目录下<br>本质还是文件的存储！</p></blockquote><p>MySQL 引擎在物理文件上的区别</p><ul><li>一个文件夹对应一个数据库</li></ul><p>MySQL数据表以文件方式存放在磁盘中</p><ul><li>包括表文件 , 数据文件 , 以及数据库的选项文件</li><li>位置 : Mysql安装目录 <code>\data\</code>下存放数据表 . 目录名对应数据库名 , 该目录下文件名对应数据表 . 注意 :</li><li><code>*. frm</code> – 表结构定义文件</li><li><code>* . MYD</code> – 数据文件 ( data )</li><li><code>*. MYI </code>– 索引文件 ( index )</li><li>InnoDB类型在数据库表中只有一个 <code>*.frm</code>文件 , 以及上一级目录的 <code>ibdata1</code>文件</li><li>MyISAM类型数据表对应三个文件 : <img src="https://img-blog.csdnimg.cn/img_convert/1c81164b9626bcf014973419e13269a1.png"></li></ul><h4 id="3-设置数据表字符集"><a href="#3-设置数据表字符集" class="headerlink" title=";  3. 设置数据表字符集"></a><a name="3__568">;</a>  3. 设置数据表字符集</h4><p><a href="https://www.jianshu.com/p/ec0c86ee3e04">mysql的默认字符编码的设置（my.ini设置字符编码） - 简书 (jianshu.com)</a></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>不设置的话，会是MySQL默认的字符集编码</p><p><a href="https://link.jianshu.com/?t=http://lib.csdn.net/base/mysql">MySQL</a>的默认编码是Latin1，不支持中文</p><p>我们可为数据库,数据表,数据列设定不同的字符集，设定方法 :</p><ul><li>创建时通过命令来设置 , 如 : CREATE TABLE 表名()CHARSET &#x3D; utf8;</li><li>如无设定 , 则根据MySQL数据库配置文件 my.ini 中的参数设定 <code>character-set-server=utf8</code></li></ul><h3 id="2-8-修改删除表"><a href="#2-8-修改删除表" class="headerlink" title="2.8 修改删除表"></a>2.8 修改删除表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher RENAME <span class="keyword">AS</span> teacher1</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">ADD</span> age <span class="type">INT</span>(<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 MODIFY age <span class="type">VARCHAR</span>(<span class="number">11</span>)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 CHANGE age1 <span class="type">INT</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">DROP</span> age1</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> teacher1</span><br></pre></td></tr></table></figure><p>所有的创建和删除操作尽量加上判断，以免报错</p><p>注意点：</p><ul><li>&#96;&#96; 字段名 使用这个包裹！</li><li>注释 - - &#x2F;**&#x2F;</li><li>sql 关键字大小写不敏感，建议大家写小写</li><li>所有的符号全部用英文！</li></ul><h2 id="三、MySQL数据管理"><a href="#三、MySQL数据管理" class="headerlink" title="三、MySQL数据管理"></a>三、MySQL数据管理</h2><h3 id="3-1-外键（了解即可）"><a href="#3-1-外键（了解即可）" class="headerlink" title="3.1 外键（了解即可）"></a>3.1 外键（了解即可）</h3><h4 id="1-外键概念"><a href="#1-外键概念" class="headerlink" title="1. 外键概念"></a>1. 外键概念</h4><p>如果公共关键字在一个关系中是主关键字，那么这个公共关键字被称为另一个关系的外键。由此可见，外键表示了两个关系之间的相关联系。以另一个关系的外键作主关键字的表被称为 <strong>主表</strong>，具有此外键的表被称为主表的 <strong>从表</strong>。</p><p>在实际操作中，将一个表的值放入第二个表来表示关联，所使用的值是第一个表的主键值(在必要时可包括复合主键值)。此时，第二个表中保存这些值的属性称为外键(<strong>foreign key</strong>)。</p><p><strong>外键作用</strong></p><p>保持数据 <strong>一致性</strong>， <strong>完整性</strong>，主要目的是控制存储在外键表中的数据, <strong>约束</strong>。使两张表形成关联，外键只能引用外表中的列的值或使用空值。</p><h4 id="2-创建外键"><a href="#2-创建外键" class="headerlink" title="2. 创建外键"></a>2. 创建外键</h4><p>建表时指定外键约束</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">   `gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">   `gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">   `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">   `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">   `pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">   `sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;女&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">   `birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">   `gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年年级&#x27;</span>,</span><br><span class="line">   `address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">   `email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY(`id`),</span><br><span class="line">   KEY `FK_gradeid` (`gradeid`),</span><br><span class="line">   <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p>建表后修改</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">   `gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">   `gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`(</span><br><span class="line">   `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">   `name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;匿名&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">   `pwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;123456&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">   `sex` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;女&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">   `birthday` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">   `gradeid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年年级&#x27;</span>,</span><br><span class="line">   `address` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;家庭住址&#x27;</span>,</span><br><span class="line">   `email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">   <span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY (`gradeid`) <span class="keyword">REFERENCES</span> `grade` (`gradeid`);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上的操作理外键，数据库级外键，我们不建议使用！ （避免数据库过多造成困扰，这里了解即可)</p><p><strong>最佳实践</strong></p><ul><li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li><li>我们想使用多张表的娄收据，想使用外键（程序去实现）-.</li></ul><h4 id="3-删除外键"><a href="#3-删除外键" class="headerlink" title="3. 删除外键"></a>3. 删除外键</h4><p>操作：删除 grade 表，发现报错</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1f8b60c131add74003e863eea90d3bd8.png"></p><p><strong>注意</strong> : 删除具有主外键关系的表时 , 要先删子表 , 后删主表</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY FK_gradeid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> INDEX FK_gradeid;</span><br></pre></td></tr></table></figure><h3 id="3-2-DML语言（全部记住）"><a href="#3-2-DML语言（全部记住）" class="headerlink" title="3.2 DML语言（全部记住）"></a>3.2 DML语言（全部记住）</h3><p><strong>数据库意义</strong> ： 数据存储、数据管理</p><p><strong>管理数据库数据方法：</strong></p><ul><li>通过SQLyog等管理工具管理数据库数据</li><li>通过 <strong>DML语句</strong>管理数据库数据</li></ul><p><strong>DML语言</strong> ：数据操作语言</p><ul><li>用于操作数据库对象中所包含的数据</li><li>包括 :</li><li><ul><li>INSERT (添加数据语句)</li><li>UPDATE (更新数据语句)</li><li>DELETE (删除数据语句)</li></ul></li></ul><h3 id="3-3-添加数据-insert"><a href="#3-3-添加数据-insert" class="headerlink" title="3.3 添加数据 insert"></a>3.3 添加数据 insert</h3><blockquote><p>INSERT命令</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大四&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` <span class="keyword">VALUES</span>(`大三`)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` <span class="keyword">VALUES</span>(`大四`)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade`(`gradename`) <span class="keyword">VALUES</span>(<span class="string">&#x27;大二&#x27;</span>),(<span class="string">&#x27;大一&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`,`pwd`,`sex`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;aaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`,`pwd`,`sex`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;aaaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>),(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;bbbbbb&#x27;</span>,<span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名[(字段<span class="number">1</span>,字段<span class="number">2</span>,字段<span class="number">3</span>,...)] <span class="keyword">VALUES</span>(<span class="string">&#x27;值1&#x27;</span>,<span class="string">&#x27;值2&#x27;</span>,<span class="string">&#x27;值3&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意 :</strong></p><ul><li>字段或值之间用英文逗号隔开 .</li><li>‘ 字段1,字段2…’ 该部分可省略 , 但添加的值务必与表结构,数据列,顺序相对应,且数量一致 .</li><li>可同时插入多条数据 , values 后用英文逗号隔开 .</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade(gradename) <span class="keyword">VALUES</span> (<span class="string">&#x27;大一&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade <span class="keyword">VALUES</span> (<span class="string">&#x27;大二&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">Column</span> count doesn`t <span class="keyword">match</span> <span class="keyword">value</span> count <span class="keyword">at</span> <span class="type">row</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade(gradename) <span class="keyword">VALUES</span> (<span class="string">&#x27;大三&#x27;</span>),(<span class="string">&#x27;大四&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>练习题目</strong></p><p>自己使用INSERT语句为课程表subject添加数据 . 使用到外键.</p><h3 id="3-4-修改数据"><a href="#3-4-修改数据" class="headerlink" title="3.4 修改数据"></a>3.4 修改数据</h3><h4 id="1-update命令"><a href="#1-update命令" class="headerlink" title="1. update命令"></a>1. update命令</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;sk&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;长江7号&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;sk&#x27;</span>,`email`<span class="operator">=</span><span class="string">&#x27;123456@163.com&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;长江7号&#x27;</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;sk&#x27;</span> <span class="keyword">AND</span> sex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `birthday`<span class="operator">=</span><span class="built_in">CURRENT_TIME</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;sk&#x27;</span> <span class="keyword">AND</span> sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> column_name<span class="operator">=</span><span class="keyword">value</span> [,column_name2<span class="operator">=</span>value2,...] [<span class="keyword">WHERE</span> <span class="keyword">condition</span>];</span><br></pre></td></tr></table></figure><p><strong>注意 :</strong></p><ul><li><code>column_name</code> 为要更改的数据列，尽量带 &#96;&#96;</li><li><code>value</code> 为修改后的数据 , 可以为变量 , 具体指 , 表达式或者嵌套的SELECT结果</li><li><code>condition</code> 为筛选条件 , 如不指定则修改该表的所有列数据</li><li>多个设置的属性之间，使用英文逗号隔开</li></ul><h4 id="1-where条件子句"><a href="#1-where条件子句" class="headerlink" title="1. where条件子句"></a>1. where条件子句</h4><p>可以简单的理解为 : 有条件地从表中筛选数据，where子句运算符 id 等于某个值，大于某个值，在某个区间内修改</p><p><img src="https://img-blog.csdnimg.cn/img_convert/21a84a1eab13ef3232c1e324f5e024d2.png"></p><p><strong>测试：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> grade <span class="keyword">SET</span> gradename <span class="operator">=</span> <span class="string">&#x27;高中&#x27;</span> <span class="keyword">WHERE</span> gradeid <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-A6XQHiQF-1639569373642)(F:\Typora\数据库\图片\image-20211211215033552.png)]</p><h3 id="3-5-删除数据"><a href="#3-5-删除数据" class="headerlink" title="3.5 删除数据"></a>3.5 删除数据</h3><h4 id="1-delete命令"><a href="#1-delete命令" class="headerlink" title="1. delete命令"></a>1. delete命令</h4><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> <span class="keyword">condition</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student` <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> <code>condition</code>为筛选条件 , 如不指定则删除该表的所有列数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> grade <span class="keyword">WHERE</span> gradeid <span class="operator">=</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="2-truncate命令"><a href="#2-truncate命令" class="headerlink" title="2. truncate命令"></a>2. truncate命令</h4><p><strong>作用：</strong>用于完全清空表数据 , 但表结构 , 索引 , 约束等不变 ;</p><p>语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> [<span class="keyword">TABLE</span>] table_name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> grade</span><br></pre></td></tr></table></figure><h4 id="注意：truncate-区别于-delete-命令"><a href="#注意：truncate-区别于-delete-命令" class="headerlink" title="注意：truncate 区别于 delete 命令"></a>注意：truncate 区别于 delete 命令</h4><ul><li>相同 : 都能删除数据 , 不删除表结构 , 但TRUNCATE速度更快</li><li>不同 :</li><li><ul><li>使用TRUNCATE TABLE 重新设置AUTO_INCREMENT计数器</li><li>使用TRUNCATE TABLE不会对事务有影响 （事务后面会说）</li><li></li></ul></li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `test`</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">FROM</span> `test`</span><br></pre></td></tr></table></figure><p>了解即可： <code>DELETE&amp;#x5220;&amp;#x9664;&amp;#x7684;&amp;#x95EE;&amp;#x9898;</code>，重启数据库,现象</p><ul><li><code>InnoDB</code> 自增列会重1开始(存在内存当中的，断电即失）</li><li><code>MyISAM</code> 继续从上一个自增量开始(存在文件中的，不会丢失）</li></ul><p>测试：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test` (</span><br><span class="line">`id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`coll` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test(coll) <span class="keyword">VALUES</span>(<span class="string">&#x27;row1&#x27;</span>),(<span class="string">&#x27;row2&#x27;</span>),(<span class="string">&#x27;row3&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> test;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、-DQL查询数据（最重点）"><a href="#四、-DQL查询数据（最重点）" class="headerlink" title="四、 DQL查询数据（最重点）"></a>四、 DQL查询数据（最重点）</h2><h3 id="4-1-DQL语言"><a href="#4-1-DQL语言" class="headerlink" title="4.1 DQL语言"></a>4.1 DQL语言</h3><h4 id="1-DQL-Data-Query-Language-数据查询语言"><a href="#1-DQL-Data-Query-Language-数据查询语言" class="headerlink" title="1. DQL( Data Query Language 数据查询语言 )"></a>1. DQL( Data Query Language 数据查询语言 )</h4><ul><li>查询数据库数据 , 如 <strong>SELECT</strong>语句</li><li>简单的单表查询或多表的复杂查询和嵌套查询</li><li>是数据库语言中最核心，最重要的语句</li><li>使用频率最高的语句</li></ul><p><strong>在数据库中创建这个表</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `school`;</span><br><span class="line"></span><br><span class="line">USE `school`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `student`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">`studentno` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `loginpwd` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `studentname` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">    `sex` TINYINT(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别，0或1&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    `phone` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系电话，允许为空&#x27;</span>,</span><br><span class="line">    `address` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址，允许为空&#x27;</span>,</span><br><span class="line">    `borndate` DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生时间&#x27;</span>,</span><br><span class="line">    `email` <span class="type">VARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱账号允许为空&#x27;</span>,</span><br><span class="line">    `identitycard` <span class="type">VARCHAR</span>(<span class="number">18</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;身份证号&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`studentno`),</span><br><span class="line">    <span class="keyword">UNIQUE</span> KEY `identitycard`(`identitycard`),</span><br><span class="line">    KEY `email` (`email`)</span><br><span class="line">)ENGINE<span class="operator">=</span>MYISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `grade`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `grade`(</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">  `gradename` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级名称&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`gradeid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT <span class="operator">=</span> <span class="number">6</span> <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `subject`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `subject`(</span><br><span class="line">`subjectno`<span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `subjectname` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;课程名称&#x27;</span>,</span><br><span class="line">    `classhour` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学时&#x27;</span>,</span><br><span class="line">    `gradeid` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年级编号&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`subjectno`)</span><br><span class="line">)ENGINE <span class="operator">=</span> INNODB AUTO_INCREMENT <span class="operator">=</span> <span class="number">19</span> <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">result</span>`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">result</span>`(</span><br><span class="line">`studentno` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">    `subjectno` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;课程编号&#x27;</span>,</span><br><span class="line">    `examdate` DATETIME <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;考试日期&#x27;</span>,</span><br><span class="line">    `studentresult` <span class="type">INT</span> (<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;考试成绩&#x27;</span>,</span><br><span class="line">    KEY `subjectno` (`subjectno`)</span><br><span class="line">)ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`studentno`,`loginpwd`,`studentname`,`sex`,`gradeid`,`phone`,`address`,`borndate`,`email`,`identitycard`)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1000</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;张伟&#x27;</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="string">&#x27;13800001234&#x27;</span>,<span class="string">&#x27;北京朝阳&#x27;</span>,<span class="string">&#x27;1980-1-1&#x27;</span>,<span class="string">&#x27;text123@qq.com&#x27;</span>,<span class="string">&#x27;123456198001011234&#x27;</span>),</span><br><span class="line">(<span class="number">1001</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;赵强&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;13800002222&#x27;</span>,<span class="string">&#x27;广东深圳&#x27;</span>,<span class="string">&#x27;1990-1-1&#x27;</span>,<span class="string">&#x27;text111@qq.com&#x27;</span>,<span class="string">&#x27;123456199001011233&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">result</span>`(`studentno`,`subjectno`,`examdate`,`studentresult`)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1000</span>,<span class="number">1</span>,<span class="string">&#x27;2013-11-11 16:00:00&#x27;</span>,<span class="number">85</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">2</span>,<span class="string">&#x27;2013-11-12 16:00:00&#x27;</span>,<span class="number">70</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">3</span>,<span class="string">&#x27;2013-11-11 09:00:00&#x27;</span>,<span class="number">68</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">4</span>,<span class="string">&#x27;2013-11-13 16:00:00&#x27;</span>,<span class="number">98</span>),</span><br><span class="line">(<span class="number">1000</span>,<span class="number">5</span>,<span class="string">&#x27;2013-11-14 16:00:00&#x27;</span>,<span class="number">58</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `grade` (`gradeid`,`gradename`) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;大一&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;大二&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;大三&#x27;</span>),(<span class="number">4</span>,<span class="string">&#x27;大四&#x27;</span>),(<span class="number">5</span>,<span class="string">&#x27;预科班&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `subject`(`subjectno`,`subjectname`,`classhour`,`gradeid`)<span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;高等数学-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;高等数学-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;高等数学-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;高等数学-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;C语言-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">&#x27;C语言-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">&#x27;C语言-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">&#x27;C语言-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">9</span>,<span class="string">&#x27;Java程序设计-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">&#x27;Java程序设计-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">&#x27;Java程序设计-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">&#x27;Java程序设计-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">&#x27;数据库结构-1&#x27;</span>,<span class="number">110</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">&#x27;数据库结构-2&#x27;</span>,<span class="number">110</span>,<span class="number">2</span>),</span><br><span class="line">(<span class="number">15</span>,<span class="string">&#x27;数据库结构-3&#x27;</span>,<span class="number">100</span>,<span class="number">3</span>),</span><br><span class="line">(<span class="number">16</span>,<span class="string">&#x27;数据库结构-4&#x27;</span>,<span class="number">130</span>,<span class="number">4</span>),</span><br><span class="line">(<span class="number">17</span>,<span class="string">&#x27;C#基础&#x27;</span>,<span class="number">130</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h4 id="2-SELECT语法"><a href="#2-SELECT语法" class="headerlink" title="2. SELECT语法"></a>2. SELECT语法</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">ALL</span> <span class="operator">|</span> <span class="keyword">DISTINCT</span>]</span><br><span class="line">&#123;<span class="operator">*</span> <span class="operator">|</span> table.<span class="operator">*</span> <span class="operator">|</span> [table.field1[<span class="keyword">as</span> alias1][,table.field2[<span class="keyword">as</span> alias2]][,...]]&#125;</span><br><span class="line"><span class="keyword">FROM</span> table_name [<span class="keyword">as</span> table_alias]</span><br><span class="line">  [<span class="keyword">left</span> <span class="operator">|</span> <span class="keyword">right</span> <span class="operator">|</span> <span class="keyword">inner</span> <span class="keyword">join</span> table_name2]</span><br><span class="line">  [<span class="keyword">WHERE</span> ...]</span><br><span class="line">  [<span class="keyword">GROUP</span> <span class="keyword">BY</span> ...]</span><br><span class="line">  [<span class="keyword">HAVING</span>]</span><br><span class="line">  [<span class="keyword">ORDER</span> <span class="keyword">BY</span> ...]</span><br><span class="line">  [LIMIT &#123;[<span class="keyword">offset</span>,]row_count <span class="operator">|</span> row_countOFFSET <span class="keyword">offset</span>&#125;];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意 : [ ] 括号代表可选的 , { }括号代表必选得</strong></p><h3 id="4-2-指定查询字段"><a href="#4-2-指定查询字段" class="headerlink" title="4.2 指定查询字段"></a>4.2 指定查询字段</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`,`studentname` <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="1-AS-子句作为别名"><a href="#1-AS-子句作为别名" class="headerlink" title="1. AS 子句作为别名"></a>1. AS 子句作为别名</h4><p><strong>作用：</strong></p><ul><li>可给数据列取一个新别名</li><li>可给表取一个新别名</li><li>可把经计算或总结的结果用另一个新名称来代替</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">AS</span> 学号,`studentname` <span class="keyword">AS</span> 姓名 <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">AS</span> 学号,` studentname` <span class="keyword">AS</span> 姓名 <span class="keyword">FROM</span> student <span class="keyword">AS</span> s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;姓名:&#x27;</span>,studentname) <span class="keyword">AS</span> 新姓名 <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="2-distinct-关键字的使用"><a href="#2-distinct-关键字的使用" class="headerlink" title="2. distinct 关键字的使用"></a>2. distinct 关键字的使用</h4><p>distinct 去重</p><p><strong>作用</strong> : 去掉 select 查询返回的记录结果中重复的记录 ( 返回所有列的值都相同 ) , 只返回一条</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">SELECT</span> `studentno` <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `studentno` <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><h4 id="3-使用表达式的列"><a href="#3-使用表达式的列" class="headerlink" title="3. 使用表达式的列"></a>3. 使用表达式的列</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@auto_increment_increment</span>;</span><br><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span><span class="operator">*</span><span class="number">3</span><span class="number">-1</span> <span class="keyword">AS</span> 计算结果;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> `studentno`, `StudentResult`<span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> <span class="string">&#x27;提分后&#x27;</span> <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><p><strong>数据库中的表达式</strong> : 一般由文本值 , 列值 , NULL , 函数和操作符等组成</p><p><strong>应用场景 :</strong></p><ul><li>select 语句返回结果列中使用</li><li>select 语句中的ORDER BY , HAVING等子句中使用</li><li>DML语句中的 where 条件语句中使用表达式</li><li>避免SQL返回结果中包含 ‘ . ‘ , ‘ * ‘ 和括号等干扰开发语言程序.</li></ul><h3 id="4-3-where条件语句"><a href="#4-3-where条件语句" class="headerlink" title="4.3 where条件语句"></a>4.3 where条件语句</h3><p><strong>作用：</strong>用于检索数据表中 <em>符合条件</em> 的记录</p><p>搜索条件可由一个或多个逻辑表达式组成 , 结果一般为真或假.</p><h4 id="1-逻辑操作符"><a href="#1-逻辑操作符" class="headerlink" title="1. 逻辑操作符"></a>1. 逻辑操作符</h4><p>尽量用英文字母</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8e6baf8110dec05e3d214a2c1cf8a04b.png"></p><p><strong>测试</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">95</span> <span class="keyword">AND</span> StudentResult100;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">95</span> <span class="operator">&amp;&amp;</span> StudentResult100;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Studentno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> StudentResult <span class="keyword">BETWEEN</span> <span class="number">95</span> <span class="keyword">AND</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentresult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> studentno<span class="operator">!=</span><span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentresult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> studentno<span class="operator">=</span><span class="number">1000</span>;</span><br></pre></td></tr></table></figure><h4 id="2-模糊查询-：比较操作符"><a href="#2-模糊查询-：比较操作符" class="headerlink" title="2. 模糊查询 ：比较操作符"></a>2. 模糊查询 ：比较操作符</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/3a60a3b354737fa5e8ace51d92c01ab4.png"></p><p><strong>注意：</strong></p><ul><li>数值数据类型的记录之间才能进行算术运算 ;</li><li>相同数据类型的数据之间才能进行比较 ;</li></ul><p><strong>测试：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘_&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;刘__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;%嘉%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> studentno <span class="keyword">IN</span> (<span class="number">1000</span>,<span class="number">1001</span>,<span class="number">1002</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname,address <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> address <span class="keyword">IN</span> (<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>,<span class="string">&#x27;河南洛阳&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> BornDate <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> BornDate <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentname <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> Address<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> Address <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><h3 id="4-4-连接查询（联表）"><a href="#4-4-连接查询（联表）" class="headerlink" title="4.4 连接查询（联表）"></a>4.4 连接查询（联表）</h3><h4 id="1-Join-对比"><a href="#1-Join-对比" class="headerlink" title="1. Join 对比"></a>1. Join 对比</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/693924f6959bdd58f94172632af35a5a.png"></p><p><strong>七种Join：</strong></p><p><img src="https://img-blog.csdnimg.cn/img_convert/930f9bdd68ad336b4709c900a7dc5307.png"></p><p>测试</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s , <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">WHERE</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.subjectno <span class="operator">=</span> r.subjectno</span><br></pre></td></tr></table></figure><h4 id="2-自连接（了解）"><a href="#2-自连接（了解）" class="headerlink" title="2. 自连接（了解）"></a>2. 自连接（了解）</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `category` (</span><br><span class="line">`categoryid` <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主题id&#x27;</span>,</span><br><span class="line">`pid` <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;父id&#x27;</span>,</span><br><span class="line">`categoryName` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主题名字&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`categoryid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB AUTO_INCREMENT<span class="operator">=</span><span class="number">9</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `category` (`categoryid`, `pid`, `categoryName`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;信息技术&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;软件开发&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;数据库&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;美术设计&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;web开发&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;ps技术&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;办公信息&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> a.categoryName <span class="keyword">AS</span> <span class="string">&#x27;父栏目&#x27;</span>,b.categoryName <span class="keyword">AS</span> <span class="string">&#x27;子栏目&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> category <span class="keyword">AS</span> a,category <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.`categoryid`<span class="operator">=</span>b.`pid`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.subjectno <span class="operator">=</span> r.subjectno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno <span class="keyword">AS</span> 学号,studentname <span class="keyword">AS</span> 学生姓名,gradename <span class="keyword">AS</span> 年级名称</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g</span><br><span class="line"><span class="keyword">ON</span> s.`GradeId` <span class="operator">=</span> g.`GradeID`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> subjectname <span class="keyword">AS</span> 科目名称,gradename <span class="keyword">AS</span> 年级名称</span><br><span class="line"><span class="keyword">FROM</span> SUBJECT sub</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> grade g</span><br><span class="line"><span class="keyword">ON</span> sub.gradeid <span class="operator">=</span> g.gradeid</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;数据库结构-1&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-5-排序和分页（经常用-）"><a href="#4-5-排序和分页（经常用-）" class="headerlink" title="4.5 排序和分页（经常用 ）"></a>4.5 排序和分页（经常用 ）</h3><p><strong>测试</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> StudentResult <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> StudentResult <span class="keyword">DESC</span> , studentno</span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname,subjectname,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> r.studentno <span class="operator">=</span> s.studentno</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> sub.subjectno</span><br><span class="line"><span class="keyword">WHERE</span> subjectname<span class="operator">=</span><span class="string">&#x27;JAVA第一学年&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> StudentResult <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="4-6-子查询"><a href="#4-6-子查询" class="headerlink" title="4.6 子查询"></a>4.6 子查询</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,r.subjectno,StudentResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> r.`SubjectNo`<span class="operator">=</span>sub.`SubjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,subjectno,StudentResult <span class="keyword">FROM</span> <span class="keyword">result</span></span><br><span class="line"><span class="keyword">WHERE</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;数据库结构-1&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> studentresult <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r</span><br><span class="line"><span class="keyword">ON</span> s.`StudentNo` <span class="operator">=</span> r.`StudentNo`</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` sub</span><br><span class="line"><span class="keyword">ON</span> sub.`SubjectNo` <span class="operator">=</span> r.`SubjectNo`</span><br><span class="line"><span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span> <span class="keyword">AND</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> r.studentno,studentname <span class="keyword">FROM</span> student s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> r <span class="keyword">ON</span> s.`StudentNo`<span class="operator">=</span>r.`StudentNo`</span><br><span class="line"><span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject`</span><br><span class="line">   <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> studentno,studentname <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno <span class="keyword">IN</span>(</span><br><span class="line">   <span class="keyword">SELECT</span> studentno <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">WHERE</span> StudentResult<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> subjectno<span class="operator">=</span>(</span><br><span class="line">       <span class="keyword">SELECT</span> subjectno <span class="keyword">FROM</span> `subject` <span class="keyword">WHERE</span> subjectname <span class="operator">=</span> <span class="string">&#x27;高等数学-2&#x27;</span></span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、MySQL函数"><a href="#五、MySQL函数" class="headerlink" title="五、MySQL函数"></a>五、MySQL函数</h2><p>官网手册：<a href="https://dev.mysql.com/doc/refman/8.0/en/">MySQL :: MySQL 8.0 Reference Manual</a></p><h3 id="5-1-常用函数"><a href="#5-1-常用函数" class="headerlink" title="5.1 常用函数"></a>5.1 常用函数</h3><p><strong>数据函数</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-8</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">9.4</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.4</span>);</span><br><span class="line"><span class="keyword">SELECT</span> RAND();</span><br><span class="line"><span class="keyword">SELECT</span> SIGN(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><strong>字符串函数</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;我&#x27;</span>,<span class="string">&#x27;爱&#x27;</span>,<span class="string">&#x27;程序&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;我爱编程helloworld&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;超级热爱&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;KuangShen&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;KuangShen&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;hello,world&#x27;</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RIGHT</span>(<span class="string">&#x27;hello,world&#x27;</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>,<span class="string">&#x27;坚持&#x27;</span>,<span class="string">&#x27;努力&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>,<span class="number">4</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">SELECT</span> INSTR(<span class="string">&#x27;kuanghshen,h&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> REVERSE(<span class="string">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(studentname,<span class="string">&#x27;周&#x27;</span>,<span class="string">&#x27;邹&#x27;</span>) <span class="keyword">AS</span> 新名字</span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">&#x27;周%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>日期和时间函数</strong>（记住）</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>();</span><br><span class="line"><span class="keyword">SELECT</span> CURDATE();</span><br><span class="line"><span class="keyword">SELECT</span> NOW();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>();</span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE();</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(NOW());</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(NOW());</span><br></pre></td></tr></table></figure><p><strong>系统信息函数</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-2-聚合函数"><a href="#5-2-聚合函数" class="headerlink" title="5.2 聚合函数"></a>5.2 聚合函数</h3><p>函数名称描述<br><strong>COUNT()</strong></p><p>返回满足Select条件的记录总和数，如 select count(*) 【不建议使用 *，效率低】SUM()返回数字字段或表达式列作统计，返回一列的总和。AVG()通常为数值字段或表达列作统计，返回一列的平均值MAX()可以为数值字段，字符字段或表达式列作统计，返回最大的值。MIN()可以为数值字段，字符字段或表达式列作统计，返回最小的值。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(studentname) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(StudentResult) <span class="keyword">AS</span> 总和 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(StudentResult) <span class="keyword">AS</span> 平均分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分 <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br></pre></td></tr></table></figure><p><strong>题目：</strong>（分组和过滤）</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> subjectname,<span class="built_in">AVG</span>(studentresult) <span class="keyword">AS</span> 平均分,<span class="built_in">MAX</span>(StudentResult) <span class="keyword">AS</span> 最高分,<span class="built_in">MIN</span>(StudentResult) <span class="keyword">AS</span> 最低分</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> `subject` <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">ON</span> r.subjectno <span class="operator">=</span> s.subjectno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> r.subjectno</span><br><span class="line"><span class="keyword">HAVING</span> 平均分<span class="operator">&gt;</span><span class="number">80</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-3-数据库级别得MD5加密（扩展）"><a href="#5-3-数据库级别得MD5加密（扩展）" class="headerlink" title="5.3 数据库级别得MD5加密（扩展）"></a>5.3 数据库级别得MD5加密（扩展）</h3><h4 id="1-MD5简介"><a href="#1-MD5简介" class="headerlink" title="1. MD5简介"></a>1. MD5简介</h4><p>MD5即Message-Digest Algorithm 5（信息-摘要算法5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法之一（又译摘要算法、哈希算法），主流编程语言普遍已有MD5实现。将数据（如汉字）运算为另一固定长度值，是杂凑算法的基础原理，MD5的前身有MD2、MD3和MD4。</p><ul><li>主要增强算法复杂度和不可逆性。</li><li>MD5不可逆，具体的值的md5是一样的</li><li>MD5破解网站的原理，背后有一个字典，MD5加密后的值，加密的前值</li></ul><h4 id="2-实现数据加密"><a href="#2-实现数据加密" class="headerlink" title="2. 实现数据加密"></a>2. 实现数据加密</h4><p>新建一个表 testmd5</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `testmd5` (</span><br><span class="line"> `id` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `pwd` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><p><strong>明文密码</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;kuangshen&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;qinjiang&#x27;</span>,<span class="string">&#x27;456789&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果我们要对pwd这一列数据进行 <strong>加密</strong>，语法是：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> testmd5 <span class="keyword">SET</span> pwd <span class="operator">=</span> MD5(pwd);</span><br></pre></td></tr></table></figure><p>如果单独对某个用户(如kuangshen)的密码加密：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;kuangshen2&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">update</span> testmd5 <span class="keyword">set</span> pwd <span class="operator">=</span> md5(pwd) <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;kuangshen2&#x27;</span>;</span><br></pre></td></tr></table></figure><p>插入新的数据 <strong>自动加密</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;kuangshen3&#x27;</span>,md5(<span class="string">&#x27;123456&#x27;</span>));</span><br></pre></td></tr></table></figure><p>查询登录用户信息（md5对比使用，查看用户输入加密后的密码进行 <strong>比对</strong>）</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;kuangshen&#x27;</span> <span class="keyword">AND</span> pwd<span class="operator">=</span>MD5(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">abs</span>(x)</span><br><span class="line">format(x, d)</span><br><span class="line"><span class="built_in">ceil</span>(x)</span><br><span class="line"><span class="built_in">floor</span>(x)</span><br><span class="line">round(x)</span><br><span class="line"><span class="built_in">mod</span>(m, n)</span><br><span class="line">pi()</span><br><span class="line">pow(m, n)</span><br><span class="line"><span class="built_in">sqrt</span>(x)</span><br><span class="line">rand()</span><br><span class="line"><span class="keyword">truncate</span>(x, d)</span><br><span class="line"></span><br><span class="line">now(), <span class="built_in">current_timestamp</span>();</span><br><span class="line"><span class="built_in">current_date</span>();</span><br><span class="line"><span class="built_in">current_time</span>();</span><br><span class="line"><span class="type">date</span>(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>);</span><br><span class="line"><span class="type">time</span>(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>);</span><br><span class="line">date_format(<span class="string">&#x27;yyyy-mm-dd hh:ii:ss&#x27;</span>, <span class="string">&#x27;%d %y %a %d %m %b %j&#x27;</span>);</span><br><span class="line">unix_timestamp();</span><br><span class="line">from_unixtime();</span><br><span class="line"></span><br><span class="line">length(string)</span><br><span class="line"><span class="keyword">char_length</span>(string)</span><br><span class="line"><span class="built_in">substring</span>(str, position [,length])</span><br><span class="line">replace(str ,search_str ,replace_str)</span><br><span class="line">instr(string ,substring)</span><br><span class="line">concat(string [,...])</span><br><span class="line">charset(str)</span><br><span class="line">lcase(string)</span><br><span class="line"><span class="keyword">left</span>(string, length)</span><br><span class="line">load_file(file_name)</span><br><span class="line">locate(substring, string [,start_position])</span><br><span class="line">lpad(string, length, pad)</span><br><span class="line">ltrim(string)</span><br><span class="line">repeat(string, count)</span><br><span class="line">rpad(string, length, pad)</span><br><span class="line">rtrim(string)</span><br><span class="line">strcmp(string1 ,string2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">count</span>()</span><br><span class="line"><span class="built_in">sum</span>();</span><br><span class="line"><span class="built_in">max</span>();</span><br><span class="line"><span class="built_in">min</span>();</span><br><span class="line"><span class="built_in">avg</span>();</span><br><span class="line">group_concat()</span><br><span class="line"></span><br><span class="line">md5();</span><br><span class="line"><span class="keyword">default</span>();</span><br></pre></td></tr></table></figure><h2 id="六、事务"><a href="#六、事务" class="headerlink" title="六、事务"></a>六、事务</h2><h3 id="6-1-什么是事务"><a href="#6-1-什么是事务" class="headerlink" title="6.1 什么是事务"></a>6.1 什么是事务</h3><ul><li>事务就是将一组SQL语句放在同一批次内去执行</li><li>如果一个SQL语句出错，则该批次内的所有SQL都将被取消执行</li><li>MySQL事务处理只支持 <code>InnoDB</code>和 <code>BDB</code>数据表类型</li></ul><h3 id="6-2-事务——ACID原则（百度-ACID）"><a href="#6-2-事务——ACID原则（百度-ACID）" class="headerlink" title="6.2 事务——ACID原则（百度 ACID）"></a>6.2 事务——ACID原则（百度 ACID）</h3><p>博客链接：<a href="https://blog.csdn.net/dengjili/article/details/82468576">事务ACID理解_dengjili的专栏-CSDN博客_acid</a></p><p><strong>原子性(Atomic)</strong></p><ul><li>整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（ROLLBACK）到事务开始前的状态，就像这个事务从来没有执行过一样。</li></ul><p><strong>一致性(Consistency)</strong></p><ul><li>一个事务可以封装状态改变（除非它是一个只读的）。事务必须始终保持系统处于一致的状态，不管在任何给定的时间并发事务有多少。也就是说：如果事务是并发多个，系统也必须如同串行事务一样操作。其主要特征是保护性和不变性(Preserving an Invariant)，以转账案例为例，假设有五个账户，每个账户余额是100元，那么五个账户总额是500元，如果在这个5个账户之间同时发生多个转账，无论并发多少个，比如在A与B账户之间转账5元，在C与D账户之间转账10元，在B与E之间转账15元，五个账户总额也应该还是500元，这就是保护性和不变性。</li></ul><p><strong>隔离性(Isolated)</strong></p><ul><li>隔离状态执行事务，使它们好像是系统在给定时间内执行的唯一操作。如果有两个事务，运行在相同的时间内，执行相同的功能，事务的隔离性将确保每一事务在系统中认为只有该事务在使用系统。这种属性有时称为串行化，为了防止事务操作间的混淆，必须串行化或序列化请求，使得在同一时间仅有一个请求用于同一数据。</li></ul><p><strong>持久性(Durability)</strong></p><ul><li>在事务完成以后，该事务对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。</li></ul><h3 id="6-3-隔离所产生的问题："><a href="#6-3-隔离所产生的问题：" class="headerlink" title="6.3 隔离所产生的问题："></a>6.3 隔离所产生的问题：</h3><h4 id="1-脏读："><a href="#1-脏读：" class="headerlink" title="1. 脏读："></a>1. 脏读：</h4><h4 id="2-不可重复读"><a href="#2-不可重复读" class="headerlink" title="2. 不可重复读"></a>2. 不可重复读</h4><p>在一个事务内读取表中的某一行数据,多次读取结果不同。(这个不一定是错误,只是某些场合不对)</p><p>页面统计查询值:</p><p>A100B200C500</p><p>点击生成报表的时候,B有人转账进来300(事务已经提交)</p><p>A100B500C500</p><h4 id="3-虚读（幻读）"><a href="#3-虚读（幻读）" class="headerlink" title="3. 虚读（幻读）"></a>3. 虚读（幻读）</h4><p>是指在一个事务内读取到了别的事务插入的数据,导致前后读取不—致。(一般是行影响,多了一行)</p><p>A100B500C500 A100B500C500D500</p><h3 id="6-3-基本语法"><a href="#6-3-基本语法" class="headerlink" title="6.3 基本语法"></a>6.3 基本语法</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">START</span> TRANSACTION</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SAVEPOINT</span> 保存点名称</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> 保存点名称</span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> 保存点名称</span><br></pre></td></tr></table></figure><p><strong>测试</strong>——转账</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `shop`<span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line">USE `shop`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account` (</span><br><span class="line">    `id` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `cash` <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> account (`name`,`cash`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;A&#x27;</span>,<span class="number">2000.00</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">10000.00</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> cash<span class="operator">=</span>cash<span class="number">-500</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> account <span class="keyword">SET</span> cash<span class="operator">=</span>cash<span class="operator">+</span><span class="number">500</span> <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="七、索引"><a href="#七、索引" class="headerlink" title="七、索引"></a>七、索引</h2><blockquote><p>MySQL官方对索引的定义为: <strong>索引(Index)是帮助MySQL高效获取数据的数据结构</strong>。<br>提取句子主干，可以得到索引的本质：索引是数据结构。</p></blockquote><h3 id="7-1-索引的作用"><a href="#7-1-索引的作用" class="headerlink" title="7.1 索引的作用"></a>7.1 索引的作用</h3><ul><li>提高查询速度</li><li>确保数据的唯一性</li><li>可以加速表和表之间的连接 , 实现表与表之间的参照完整性</li><li>使用分组和排序子句进行数据检索时 , 可以显著减少分组和排序的时间</li><li>全文检索字段进行搜索优化.</li></ul><h3 id="7-2-分类"><a href="#7-2-分类" class="headerlink" title="7.2 分类"></a>7.2 分类</h3><ul><li><strong>主键索引 (Primary Key)</strong><ul><li>唯一的标识，主键不可重复，只能有一个列作为主键</li></ul></li><li><strong>唯一索引 (Unique Key)</strong><ul><li>避免重复的列出现，唯一索引可以重复，多个列都可以标识位唯一索引</li></ul></li><li><strong>常规索引 (Index)</strong><ul><li>默认的, index。key关键字来设置</li></ul></li><li><strong>全文索引 (FullText)</strong><ul><li>在特定的数据库引擎下才有, MyISAM</li><li>快速定位数据</li></ul></li></ul><h4 id="1-主键索引"><a href="#1-主键索引" class="headerlink" title="1. 主键索引"></a>1. 主键索引</h4><p><strong>主键 :</strong> 某一个属性组能唯一标识一条记录</p><p><strong>特点 :</strong></p><ul><li>最常见的索引类型</li><li>确保数据记录的唯一性</li><li>确定特定数据记录在数据库中的位置</li></ul><h4 id="2-唯一索引"><a href="#2-唯一索引" class="headerlink" title="2. 唯一索引"></a>2. 唯一索引</h4><p><strong>作用 :</strong> 避免同一个表中某数据列中的值重复</p><p><strong>与主键索引的区别</strong></p><ul><li>主键索引只能有一个</li><li>唯一索引可能有多个</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Grade`(</span><br><span class="line">  `GradeID` <span class="type">INT</span>(<span class="number">11</span>) AUTO_INCREMENT PRIMARYKEY,</span><br><span class="line">  `GradeName` <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="3-常规索引"><a href="#3-常规索引" class="headerlink" title="3. 常规索引"></a>3. 常规索引</h4><p>作用 : 快速定位特定数据</p><p>注意 :</p><ul><li>index 和 key 关键字都可以设置常规索引</li><li>应加在查询找条件的字段</li><li>不宜添加太多常规索引,影响数据的插入,删除和修改操作</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">result</span>`(</span><br><span class="line"></span><br><span class="line">  INDEX<span class="operator">/</span>KEY `ind` (`studentNo`,`subjectNo`)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `<span class="keyword">result</span>` <span class="keyword">ADD</span> INDEX `ind`(`studentNo`,`subjectNo`);</span><br></pre></td></tr></table></figure><h4 id="4-全文索引"><a href="#4-全文索引" class="headerlink" title="4. 全文索引"></a>4. 全文索引</h4><p>百度搜索：全文索引</p><p>作用 : 快速定位特定数据</p><p><strong>注意 :</strong></p><ul><li>只能用于MyISAM类型的数据表</li><li>只能用于CHAR , VARCHAR , TEXT数据列类型</li><li>适合大型数据集</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `school`.`student` <span class="keyword">ADD</span> FULLTEXT INDEX `studentname` (`StudentName`);</span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> studentno<span class="operator">=</span><span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname) AGAINST(<span class="string">&#x27;love&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-3-拓展：测试索引"><a href="#7-3-拓展：测试索引" class="headerlink" title="7.3 拓展：测试索引"></a>7.3 拓展：测试索引</h3><p><strong>建表app_user：</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `app_user` (</span><br><span class="line">`id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">`email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户邮箱&#x27;</span>,</span><br><span class="line">`phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">`gender` tinyint(<span class="number">4</span>) unsigned <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;性别（0:男；1：女）&#x27;</span>,</span><br><span class="line">`password` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`age` tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">`create_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">`update_time` <span class="type">timestamp</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 COMMENT<span class="operator">=</span><span class="string">&#x27;app用户表&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>批量插入数据：100w</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> IF <span class="keyword">EXISTS</span> mock_data;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">WHILE i <span class="operator">&lt;</span> num DO</span><br><span class="line">  <span class="keyword">INSERT</span> <span class="keyword">INTO</span> app_user(`name`, `email`, `phone`, `gender`, `password`, `age`)</span><br><span class="line">   <span class="keyword">VALUES</span>(CONCAT(<span class="string">&#x27;用户&#x27;</span>, i), <span class="string">&#x27;24736743@qq.com&#x27;</span>, CONCAT(<span class="string">&#x27;18&#x27;</span>, <span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span>(<span class="number">999999999</span><span class="number">-100000000</span>)<span class="operator">+</span><span class="number">100000000</span>)),<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">2</span>),UUID(), <span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line">  <span class="keyword">SET</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">SELECT</span> mock_data();</span><br></pre></td></tr></table></figure><p><strong>索引效率测试</strong></p><p>无索引</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">          id: <span class="number">1</span></span><br><span class="line">select_type: SIMPLE</span><br><span class="line">       <span class="keyword">table</span>: app_user</span><br><span class="line">  partitions: <span class="keyword">NULL</span></span><br><span class="line">        type: <span class="keyword">ALL</span></span><br><span class="line">possible_keys: <span class="keyword">NULL</span></span><br><span class="line">        key: <span class="keyword">NULL</span></span><br><span class="line">    key_len: <span class="keyword">NULL</span></span><br><span class="line">        <span class="keyword">ref</span>: <span class="keyword">NULL</span></span><br><span class="line">        <span class="keyword">rows</span>: <span class="number">992759</span></span><br><span class="line">    filtered: <span class="number">10.00</span></span><br><span class="line">      Extra: <span class="keyword">Using</span> <span class="keyword">where</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>创建索引</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE INDEX idx_app_user_name ON app_user(name);</span><br></pre></td></tr></table></figure><p>测试普通索引</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">          id: <span class="number">1</span></span><br><span class="line">select_type: SIMPLE</span><br><span class="line">       <span class="keyword">table</span>: app_user</span><br><span class="line">  partitions: <span class="keyword">NULL</span></span><br><span class="line">        type: <span class="keyword">ref</span></span><br><span class="line">possible_keys: idx_app_user_name</span><br><span class="line">        key: idx_app_user_name</span><br><span class="line">    key_len: <span class="number">203</span></span><br><span class="line">        <span class="keyword">ref</span>: const</span><br><span class="line">        <span class="keyword">rows</span>: <span class="number">1</span></span><br><span class="line">    filtered: <span class="number">100.00</span></span><br><span class="line">      Extra: <span class="keyword">NULL</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span>, <span class="number">1</span> warning (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> app_user <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;用户9999&#x27;</span>;</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="7-4-索引准则"><a href="#7-4-索引准则" class="headerlink" title="7.4 索引准则"></a>7.4 索引准则</h3><ul><li>索引不是越多越好</li><li>不要对经常变动的数据加索引</li><li>小数据量的表建议不要加索引</li><li>索引一般应加在查找条件的字段</li></ul><h3 id="7-5-索引的数据结构"><a href="#7-5-索引的数据结构" class="headerlink" title="7.5 索引的数据结构"></a>7.5 索引的数据结构</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">hash类型的索引：查询单条快，范围查询慢</span><br><span class="line">btree类型的索引：b<span class="operator">+</span>树，层数越多，数据量指数级增长（我们就用它，因为innodb默认支持它）</span><br><span class="line"></span><br><span class="line">InnoDB 支持事务，支持行级别锁定，支持 B<span class="operator">-</span>tree、<span class="keyword">Full</span><span class="operator">-</span>text 等索引，不支持 Hash 索引；</span><br><span class="line">MyISAM 不支持事务，支持表级别锁定，支持 B<span class="operator">-</span>tree、<span class="keyword">Full</span><span class="operator">-</span>text 等索引，不支持 Hash 索引；</span><br><span class="line">Memory 不支持事务，支持表级别锁定，支持 B<span class="operator">-</span>tree、Hash 等索引，不支持 <span class="keyword">Full</span><span class="operator">-</span>text 索引；</span><br><span class="line">NDB 支持事务，支持行级别锁定，支持 Hash 索引，不支持 B<span class="operator">-</span>tree、<span class="keyword">Full</span><span class="operator">-</span>text 等索引；</span><br><span class="line">Archive 不支持事务，支持表级别锁定，不支持 B<span class="operator">-</span>tree、Hash、<span class="keyword">Full</span><span class="operator">-</span>text 等索引；</span><br></pre></td></tr></table></figure><p>阅读：<a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">CodingLabs - MySQL索引背后的数据结构及算法原理</a></p><p>全文阅读</p><h2 id="八、用户管理"><a href="#八、用户管理" class="headerlink" title="八、用户管理"></a>八、用户管理</h2><h3 id="8-1-创建新用户"><a href="#8-1-创建新用户" class="headerlink" title="8.1 创建新用户"></a>8.1 创建新用户</h3><h4 id="1-创建用户"><a href="#1-创建用户" class="headerlink" title="1. 创建用户"></a>1. 创建用户</h4><blockquote><p>使用SQLyog 创建用户，并授予权限演示</p></blockquote><p><img src="https://img-blog.csdnimg.cn/5782315ef016413cbb5c550d681ed842.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/fceafc76a52844e581a7f2c7708066c5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><h4 id="2-基本命令"><a href="#2-基本命令" class="headerlink" title=";  2. 基本命令"></a><a name="2__2199">;</a>  2. 基本命令</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">用户信息表：mysql.user</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> blue IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line">RENAME <span class="keyword">USER</span> blue <span class="keyword">TO</span> blue2</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span> PASSWORD(<span class="string">&#x27;密码&#x27;</span>)</span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> 用户名 <span class="operator">=</span> PASSWORD(<span class="string">&#x27;密码&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> 用户名</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> 权限列表 <span class="keyword">ON</span> 表名 <span class="keyword">TO</span> 用户名 [IDENTIFIED <span class="keyword">BY</span> [PASSWORD] <span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">  <span class="operator">-</span> <span class="keyword">all</span> privileges 表示所有权限</span><br><span class="line">  <span class="operator">-</span> <span class="operator">*</span>.<span class="operator">*</span> 表示所有库的所有表</span><br><span class="line">  <span class="operator">-</span> 库名.表名 表示某库下面的某表</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> 用户名</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS; 或 <span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="built_in">CURRENT_USER</span>; 或 <span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="built_in">CURRENT_USER</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">REVOKE</span> 权限列表 <span class="keyword">ON</span> 表名 <span class="keyword">FROM</span> 用户名</span><br><span class="line"><span class="keyword">REVOKE</span> 权限列表 <span class="keyword">ON</span> 表名 <span class="keyword">FROM</span> 用户名</span><br><span class="line"></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> blue2</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES, <span class="keyword">GRANT</span> OPTION <span class="keyword">FROM</span> 用户名</span><br></pre></td></tr></table></figure><h4 id="3-权限解释"><a href="#3-权限解释" class="headerlink" title="3. 权限解释"></a>3. 权限解释</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALL</span> [PRIVILEGES]</span><br><span class="line"><span class="keyword">ALTER</span></span><br><span class="line"><span class="keyword">ALTER</span> ROUTINE</span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line"><span class="keyword">CREATE</span> ROUTINE</span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY TABLES</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">DROP</span></span><br><span class="line"><span class="keyword">EXECUTE</span></span><br><span class="line">FILE</span><br><span class="line">INDEX</span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line">LOCK TABLES</span><br><span class="line">PROCESS</span><br><span class="line"><span class="keyword">REFERENCES</span></span><br><span class="line">RELOAD</span><br><span class="line">REPLICATION CLIENT</span><br><span class="line">REPLICATION SLAVE</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">SHOW</span> DATABASES</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VIEW</span></span><br><span class="line">SHUTDOWN</span><br><span class="line">SUPER</span><br><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">USAGE</span><br><span class="line"><span class="keyword">GRANT</span> OPTION</span><br><span class="line"></span><br><span class="line">ANALYZE [<span class="keyword">LOCAL</span> <span class="operator">|</span> NO_WRITE_TO_BINLOG] <span class="keyword">TABLE</span> 表名 ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">CHECK</span> <span class="keyword">TABLE</span> tbl_name [, tbl_name] ... [option] ...</span><br><span class="line"></span><br><span class="line">option <span class="operator">=</span> &#123;QUICK <span class="operator">|</span> FAST <span class="operator">|</span> MEDIUM <span class="operator">|</span> EXTENDED <span class="operator">|</span> CHANGED&#125;</span><br><span class="line"></span><br><span class="line">OPTIMIZE [<span class="keyword">LOCAL</span> <span class="operator">|</span> NO_WRITE_TO_BINLOG] <span class="keyword">TABLE</span> tbl_name [, tbl_name] ...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-2-MySQL备份"><a href="#8-2-MySQL备份" class="headerlink" title="8.2 MySQL备份"></a>8.2 MySQL备份</h3><p><strong>数据库备份必要性</strong></p><ul><li>保证重要数据不丢失</li><li>数据转移</li></ul><p><strong>MySQL数据库备份方法</strong></p><ul><li>mysqldump备份工具</li><li>数据库管理工具,如SQLyog</li><li>直接拷贝数据库文件和相关配置文件</li></ul><p><strong>mysqldump客户端</strong></p><p>作用 :</p><ul><li>转储数据库</li><li>搜集数据库进行备份</li><li>将数据转移到另一个SQL服务器,不一定是MySQL服务器</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/302e8f1a29203d4e5c572694a5abb33c.png"></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span> 导出一张表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 表名 <span class="operator">&gt;</span> 文件名(D:<span class="operator">/</span>a.sql)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 导出多张表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 表<span class="number">1</span> 表<span class="number">2</span> 表<span class="number">3</span> <span class="operator">&gt;</span> 文件名(D:<span class="operator">/</span>a.sql)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> 导出所有表</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 <span class="operator">&gt;</span> 文件名(D:<span class="operator">/</span>a.sql)</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 导出一个库</span><br><span class="line">　　mysqldump <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 <span class="operator">-</span>B 库名 <span class="operator">&gt;</span> 文件名(D:<span class="operator">/</span>a.sql)</span><br><span class="line"></span><br><span class="line">可以<span class="operator">-</span>w携带备份条件</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 在登录mysql的情况下：</span><br><span class="line">　　source 备份文件</span><br><span class="line"><span class="number">2.</span> 在不登录的情况下</span><br><span class="line">　　mysql <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 库名 <span class="operator">&lt;</span> 备份文件</span><br></pre></td></tr></table></figure><h2 id="九、规范化数据库设计"><a href="#九、规范化数据库设计" class="headerlink" title="九、规范化数据库设计"></a>九、规范化数据库设计</h2><h3 id="9-1-为什么需要数据库设计"><a href="#9-1-为什么需要数据库设计" class="headerlink" title="9.1 为什么需要数据库设计"></a>9.1 为什么需要数据库设计</h3><p><strong>当数据库比较复杂时我们需要设计数据库</strong></p><p><strong>糟糕的数据库设计 :</strong></p><ul><li>数据冗余，存储空间浪费</li><li>数据库插入和删除都会麻烦、异常，数据更新和插入的异常</li><li>程序性能差</li></ul><p><strong>良好的数据库设计 :</strong></p><ul><li>节省数据的存储空间</li><li>能够保证数据的完整性</li><li>方便进行数据库应用系统的开发</li></ul><p><strong>软件项目开发周期中数据库设计 :</strong></p><ul><li>需求分析阶段：分析客户的业务和数据处理需求</li><li>概要设计阶段：设计数据库的E-R模型图 , 确认需求信息的正确和完整.</li></ul><p><strong>设计数据库步骤</strong>：</p><ul><li><p>收集信息，分析需求</p><ul><li>与该系统有关人员进行交流 , 座谈 , 充分了解用户需求 , 理解数据库需要完成的任务.</li></ul></li><li><p>标识实体[Entity]</p></li><li><ul><li>标识数据库要管理的关键对象或实体,实体一般是名词</li></ul></li><li><p>标识每个实体需要存储的详细信息[Attribute]</p></li><li><p>标识实体之间的关系[Relationship]</p></li></ul><p><strong>设计数据库步骤：（个人博客）</strong></p><ul><li>收集信息，分析需求<ul><li>用户表（用户登录注销，用户个人信息，写博客，创建分类） <img src="https://img-blog.csdnimg.cn/7d6c0d6e5a034156a57e98240a71d4a4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></li><li>分类表(文章分类，谁创建的)</li><li>文章表（文章的信息）</li><li>评论表 <img src="https://img-blog.csdnimg.cn/5f9f62b9d96f4b939235fd31dd04fe53.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></li><li>友链表（友链信息）</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/eafcd86f75084f268a7de8d995b02605.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><ul><li>自定义表（系统信息,某个关键的字,或者一些主字段）key: value</li><li>标识实体（把需求落地到每个字段）</li></ul><h3 id="9-2-三大范式"><a href="#9-2-三大范式" class="headerlink" title=";  9.2 三大范式"></a><a name="92__2415">;</a>  9.2 三大范式</h3><p><strong>问题 : 为什么需要数据规范化?</strong></p><p>不合规范的表设计会导致的问题：</p><ul><li>信息重复</li><li>更新异常</li><li>插入异常<ul><li>无法正确表示信息</li></ul></li><li>删除异常<ul><li>丢失有效信息</li></ul></li></ul><h4 id="1-三大范式"><a href="#1-三大范式" class="headerlink" title="1. 三大范式"></a>1. 三大范式</h4><p><strong>第一范式 (1st NF)</strong></p><p>第一范式的目标是确保每列的原子性,如果每列都是不可再分的最小数据单元,则满足第一范式</p><p><strong>第二范式(2nd NF)</strong></p><p>第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。</p><p>第二范式要求每个表只描述一件事情</p><p><strong>第三范式(3rd NF)</strong></p><p>如果一个关系满足第二范式,并且除了主键以外的其他列都不传递依赖于主键列,则满足第三范式.</p><p>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</p><p><strong>规范化和性能的关系</strong>（规范数据库的设计）</p><p>关联查询的表不得超过三张表</p><ul><li>为满足某种商业目标 , 数据库性能比规范化数据库更重要</li><li>在数据规范化的同时 , 要综合考虑数据库的性能</li><li>通过在给定的表中添加额外的字段,以大量减少需要从中搜索信息所需的时间</li><li>通过在给定的表中插入计算列,以方便查询</li></ul><h2 id="10、JDBC"><a href="#10、JDBC" class="headerlink" title="10、JDBC"></a>10、JDBC</h2><h3 id="10-1-数据库驱动（重点）"><a href="#10-1-数据库驱动（重点）" class="headerlink" title="10.1 数据库驱动（重点）"></a>10.1 数据库驱动（重点）</h3><p>驱动：声卡,显卡、数据库</p><p><img src="https://img-blog.csdnimg.cn/9948e4ef62084ebd98463e9cf33d3a3e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>我们的程序会通过数据库驱动,和数据库打交道</p><h3 id="10-2-JDBC"><a href="#10-2-JDBC" class="headerlink" title=";  10.2 JDBC"></a><a name="102_jdbc_2493">;</a>  10.2 JDBC</h3><p>SUN公司为了简化开发人员的(对数据库的统一)操作，提供了一个〔ava操作数据库的)规范，俗称JDBC，这些规范的实现由具体的厂商去做</p><p>对于开发人员来说， 我们只需要掌握 JDBC 接口的操作即可！</p><p><img src="https://img-blog.csdnimg.cn/72afb8e4de704501a311df7a80eb8d17.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>Java.sq<br>Javax.sq<br>还需要导入一个数据库驱动包</p><h3 id="10-3-第一个JDBC程序"><a href="#10-3-第一个JDBC程序" class="headerlink" title="10.3 第一个JDBC程序"></a>10.3 第一个JDBC程序</h3><blockquote><p>创建测试数据库</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `jdbcStudy` <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line">USE `jdbcStudy`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users`(</span><br><span class="line"> `id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line"> `NAME` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line"> `PASSWORD` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line"> `email` <span class="type">VARCHAR</span>(<span class="number">60</span>),</span><br><span class="line"> birthday <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users`(`id`,`NAME`,`PASSWORD`,`email`,`birthday`)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;zs@sina.com&#x27;</span>,<span class="string">&#x27;1980-12-04&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;lisi@sina.com&#x27;</span>,<span class="string">&#x27;1981-12-04&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;wangwu@sina.com&#x27;</span>,<span class="string">&#x27;1979-12-04&#x27;</span>)</span><br></pre></td></tr></table></figure><p>1、创建一个普通项目</p><p>2、导入数据库驱动</p><p><img src="https://img-blog.csdnimg.cn/5e6eb05cbeaa4347aeb79fbe0fe53394.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>点击 <code>Add as library</code></p><p><img src="https://img-blog.csdnimg.cn/5b8224d82db848bdb7c7e874ae5e9016.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>3、编写测试代码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br></pre></td></tr></table></figure><p><code>jdbc:mysql://localhost:3306/jdbcstudy?</code>支持中文编码 <code>&amp;</code>设置中文字符集 <code>&amp;</code>使用安全连接</p><p>步骤总结：</p><ol><li>加载驱动</li><li>连接数据库 <code>DriverManager</code></li><li>获得执行SQL的对象 <code>Statement</code></li><li>获得返回的结果集 <code>ResultSet</code></li><li>释放连接</li></ol><blockquote><p>DriverManager</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    connection.rollback();</span><br><span class="line">    connection.commit();</span><br><span class="line">    connection.setAutocommito();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>URL</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>Statement 执行SQL的对象 PrepareStatement 执行SQL的对象</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line"></span><br><span class="line">statement.executeQuery();</span><br><span class="line">statement.execute();</span><br><span class="line">statement.executeUpdate();</span><br></pre></td></tr></table></figure><blockquote><p>ResultSet 查询的结果集：封装了所有的查询结果</p></blockquote><p>获得指定的数据类型</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resultset. getobjectO;</span><br><span class="line"></span><br><span class="line">resultset.getString();</span><br><span class="line">resultse. getInt();</span><br><span class="line">resultset.getFloat();</span><br><span class="line">resultset.getDate();</span><br><span class="line">resultset.getObject();</span><br><span class="line">......</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>遍历，指针</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resultset.beforefirst();</span><br><span class="line">resultset.aftertaste();</span><br><span class="line">resultset.next();</span><br><span class="line">resultset.previous();</span><br><span class="line">resultset.absolute(row);</span><br></pre></td></tr></table></figure><blockquote><p>释放资源</p></blockquote><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><p><strong>总代码：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcFirstDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line"></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span><span class="string">&quot;root&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id=&quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;name=&quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;pwd=&quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;email=&quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;birth=&quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;==================================================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-4-statement-对象"><a href="#10-4-statement-对象" class="headerlink" title="10.4 statement 对象"></a>10.4 statement 对象</h3><p>Jdbc中的 statement对象用于向数据库发送sqL语句，想完成对数据库的增删改査,只需要通过这个对象向数据库发送増删改查语句即可</p><p>Statement对象的 <code>executeUpdate</code>方法，用于向数据库发送增、删、改的sql语句，executeUpdate执行完后，将会返回一个整数(即增删改语句导致了数据库几行数据发生了变化)</p><p><code>Statement.executeQuery</code>方法用于向数据库发送查询语句， <code>executeQuery</code>方法返回代表查询结果的 Resultset对象</p><blockquote><p>CRUD操作- create</p></blockquote><p>使用 <code>executeUpdate(String sql)</code> 方法完成数据添加操作，示例操作：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> conn. createStatement();</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot; insert into user(...) values(...)&quot;</span></span><br><span class="line"><span class="type">int</span> num= st.executeUpdate(sq1);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    system.out. printIn(<span class="string">&quot;插入成功!!!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CRUD操作 - delete</p></blockquote><p>使用 <code>executeUpdate( String sql)</code> 方法完成数据删除操作，示例操作：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from user where id=l&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">   system.out.printIn(<span class="string">&quot;删除成功!!!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CRUD操作 - update</p></blockquote><p>用 <code>executeUpdate( String sql)</code> 方法完成数据修改操作,示例操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update user set name=&#x27;&#x27; where name =&#x27;&#x27;&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> st.executeUpdate(sql)</span><br><span class="line"><span class="keyword">if</span>(num &gt; <span class="number">0</span>)&#123;</span><br><span class="line">system.out.printIn(<span class="string">&quot;修改成功!!!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CRUD操作 - read</p></blockquote><p>吏用 executeQuery( String sq方法完成数据查询操作,示例操作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user where id=l&quot;</span>;</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> st.executeQuery(sql)</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-代码实现"><a href="#1-代码实现" class="headerlink" title="1. 代码实现"></a>1. 代码实现</h4><ul><li>提取工具类</li><li>编写增删改的方法， <code>executeUpdate</code></li></ul><p><strong>增</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextInsert</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users(id,`NAME`,`PASSWORD`,`email`,`birthday`)    &quot;</span> +</span><br><span class="line">                    <span class="string">&quot;VALUES(4,&#x27;blue&#x27;,&#x27;123456&#x27;,&#x27;24736743@qq.com&#x27;,&#x27;2020-01-01&#x27;)&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>删</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextDelete</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;DELETE FROM users WHERE id = 4&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>改</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextUpdate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;UPDATE users SET `name` = &#x27;blue&#x27;,`email`=&#x27;24736743@qq.com`jdbcstudy`&#x27; WHERE id=1&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;更新成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查询</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextSelect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users where id = 1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            rs = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">if</span> (rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-SQL注入问题"><a href="#2-SQL注入问题" class="headerlink" title="2. SQL注入问题"></a>2. SQL注入问题</h4><p>sql存在漏洞，会被攻击导致数据泄露，SQL会被拼接or</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SQL</span>注入 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        login(<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users where `NAME`= &#x27;&quot;</span>+username+<span class="string">&quot;&#x27; AND `password`=&#x27;&quot;</span>+password+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            rs = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">if</span> (rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-5-PreparedStatement-对象"><a href="#10-5-PreparedStatement-对象" class="headerlink" title="10.5 PreparedStatement 对象"></a>10.5 PreparedStatement 对象</h3><ul><li><code>PreparedStatement</code>可以防止SQL注入。</li><li>效率更好</li></ul><p>1、增加</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextInsert</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into users(id,`NAME`,`PASSWORD`,`email`,`birthday`) values(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setInt(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">            st.setString(<span class="number">2</span>,<span class="string">&quot;blue&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">3</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">4</span>,<span class="string">&quot;24736743@qq.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">            st.setDate(<span class="number">5</span>,<span class="keyword">new</span> <span class="title class_">java</span>.sql.Date(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、删除</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextDelete</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from users where id=?&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setInt(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、修改</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextUpdate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update users set `NAME` =?  where id=? ; &quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setString(<span class="number">1</span>  ,<span class="string">&quot;blue&quot;</span>);</span><br><span class="line">            st.setInt(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;更新成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、查询</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TextSelect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users where id=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setInt(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            rs = st.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、防止SQL注入</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuang.lesson03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.kuang.lesson02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SQL</span>注入 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        login(<span class="string">&quot;lisi&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        login(<span class="string">&quot;&#x27;&#x27; or 1=1&quot;</span>,<span class="string">&quot;&#x27;&#x27; or 1=1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String username, String password)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">st</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from users where `NAME`=? and `PASSWORD`=?&quot;</span>;</span><br><span class="line"></span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line">            st.setString(<span class="number">1</span>,username);</span><br><span class="line">            st.setString(<span class="number">2</span>,password);</span><br><span class="line"></span><br><span class="line">            rs = st.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn,st,rs);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-6-连接数据库"><a href="#10-6-连接数据库" class="headerlink" title="10.6 连接数据库"></a>10.6 连接数据库</h3><p><img src="https://img-blog.csdnimg.cn/d2d280292e364efd80360ec1a16bc193.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_18,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/dcad26c581a2454eb433ef76ea97f031.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/34a934f881554231961762337867dec6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/b1733453e679479f8f38e56c102779e5.png#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/ffc4e7088e82410ca9479c1eb83c0131.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAeWVhaEJsdWU=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><h3 id="10-7-事务"><a href="#10-7-事务" class="headerlink" title=";  10.7 事务"></a><a name="107__3254">;</a>  10.7 事务</h3><p><strong>要么都成功，要么都失败</strong></p><blockquote><p>ACID原则</p></blockquote><p>原子性：要么全部完成,要么都不完成</p><p>一致性：总数不变</p><p>隔离性：多个进程互不干扰</p><p>持久性：一旦提交不可逆，持久化到数据库了</p><blockquote><p>隔离性的问题</p></blockquote><p>脏读：事务读取了另一个没有提交的事务</p><p>不可重复读：在同一个事务内，重复读取表中的数据，表数据发生了改变</p><p>虚读(幻读)：在一个事务内，读取到了别人插入的数据，导致前后读出来结果不一致</p><blockquote><p>代码实现</p></blockquote><p>1、开启事务 <code>conn.setAutoCommit(false)</code></p><p>2、一组业务执行完毕,提交事务</p><p>3、可以在 catch 语句中显示的定义回滚语句,但默认失败就会回滚</p><h3 id="10-8-数据库连接池"><a href="#10-8-数据库连接池" class="headerlink" title="10.8 数据库连接池"></a>10.8 数据库连接池</h3><p>数据库连接 — 执行完毕 — 释放</p><p>连接 — 释放十分浪费系统资源</p><p><strong>池化技术：准备一些预先的资源，过来就连接预先准备好的</strong></p><p>——- 开门 – 业务员：等待 - 服务 - 关门</p><p>最小连接数：10</p><p>最大连接数：15</p><p>等待超时：100ms</p><p>编写连接池，实现一个接口 Data Source</p><blockquote><p>开源数据源实现</p></blockquote><p>DBCP</p><p>C3PO</p><p>Druid：阿里巴巴</p><p>使用了这些数据库连接池之后，我们在项目开发中就不需要编写连接数据库的代码了</p><blockquote><p>DBCP</p></blockquote><p>需要用到的jar包</p><p>commons-dbcp-1.4，commons-pool-16</p><blockquote><p>C3P0</p></blockquote><p>需要用到的jar包</p><p>c3p0-0.9.5.5、 mchange-commons-java-0 2.19</p><blockquote><p>结论</p></blockquote><p>无论使用什么数据源，本质还是一样的， Data Source接口不会变，方法就不会变</p><p>Druid<br>Apache</p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密文章</title>
      <link href="/2024/02/15/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0/"/>
      <url>/2024/02/15/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo文章设置加密访问"><a href="#hexo文章设置加密访问" class="headerlink" title="hexo文章设置加密访问"></a>hexo文章设置加密访问</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: typora-vue-theme主题介绍</span><br><span class="line">date: 2018-09-07 09:25:00</span><br><span class="line">author: 赵奇</span><br><span class="line">img: /source/images/xxx.jpg</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">coverImg: /images/1.jpg</span><br><span class="line">password:8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="line">toc: false</span><br><span class="line">mathjax: false</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown</span><br><span class="line">tags:</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>加密密码要小写</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java面试技巧与学习路线</title>
      <link href="/2024/02/11/java%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2024/02/11/java%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8E%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="面试准备"><a href="#面试准备" class="headerlink" title="面试准备"></a>面试准备</h2><h5 id="准备简历"><a href="#准备简历" class="headerlink" title="准备简历"></a>准备简历</h5><p>（具体可以查看博主介绍<a href="https://javaguide.cn/interview-preparation/resume-guide.html">https://javaguide.cn/interview-preparation/resume-guide.html</a>)</p><p><strong>1.个人介绍没太多实用的信息。</strong></p><p><strong>2.项目经历过于简单，完全没有质量可言</strong></p><p>如果有项目的话，技术面试第一步，面试官一般都是让你自己介绍一下你的项目。你可以从下面几个方向来考虑：</p><ol><li>你对项目整体设计的一个感受（面试官可能会让你画系统的架构图）</li><li>你在这个项目中你负责了什么、做了什么、担任了什么角色。</li><li>从这个项目中你学会了那些东西，使用到了那些技术，学会了那些新技术的使用。</li><li>你在这个项目中是否解决过什么问题？怎么解决的？收获了什么？</li><li>你的项目用到了哪些技术？这些技术你吃透了没有？</li><li>你在这个项目中犯过的错误，最后是怎么弥补的？</li></ol><h5 id="提前准备自我介绍"><a href="#提前准备自我介绍" class="headerlink" title="提前准备自我介绍"></a>提前准备自我介绍</h5><p><strong>社招：</strong></p><p>面试官，您好！我叫xx。我目前有 三个月的实习工作经验，熟练使用 Spring、MyBatis 等框架、了解 Java 底层原理比如 JVM 调优并且有着丰富的分布式开发经验。离开上一家公司是因为我想在技术上得到更多的锻炼。在上一个公司我参与了一个分布式电子交易系统的开发，负责搭建了整个项目的基础架构并且通过分库分表解决了原始数据库以及一些相关表过于庞大的问题，目前这个网站最高支持 10 万人同时访问。工作之余，我利用自己的业余时间写了一个简单的 RPC 框架，这个框架用到了 Netty 进行网络通信， 目前我已经将这个项目开源，在 GitHub 上收获了 2k 的 Star! 说到业余爱好的话，我比较喜欢通过博客整理分享自己所学知识，现在已经是多个博客平台的认证作者。 生活中我是一个比较积极乐观的人，一般会通过运动打球的方式来放松。我一直都非常想加入贵公司，我觉得贵公司的文化和技术氛围我都非常喜欢，期待能与你共事！</p><hr><p><strong>校招：</strong></p><p>面试官，您好！我叫秀儿。大学时间我主要利用课外时间学习了 Java 以及 Spring、MyBatis 等框架 。在校期间参与过一个考试系统的开发，这个系统的主要用了 Spring、MyBatis 和 shiro 这三种框架。我在其中主要担任后端开发，主要负责了权限管理功能模块的搭建。另外，我在大学的时候参加过一次软件编程大赛，我和我的团队做的在线订餐系统成功获得了第二名的成绩。我还利用自己的业余时间写了一个简单的 RPC 框架，这个框架用到了 Netty 进行网络通信， 目前我已经将这个项目开源，在 GitHub 上收获了 2k 的 Star! 说到业余爱好的话，我比较喜欢通过博客整理分享自己所学知识，现在已经是多个博客平台的认证作者。 生活中我是一个比较积极乐观的人，一般会通过运动打球的方式来放松。我一直都非常想加入贵公司，我觉得贵公司的文化和技术氛围我都非常喜欢，期待能与你共事！</p><h5 id="背八股文和算法"><a href="#背八股文和算法" class="headerlink" title="背八股文和算法"></a>背八股文和算法</h5><p>​<strong>如何更高效地准备八股文？</strong></p><p>对于技术八股文来说，尽量不要死记硬背，我一直觉得面试八股文最好是和实际应用场景和实战相结合。很多同学现在的方向都错了，上来就是直接背八股文，硬生生学成了文科，那当然无趣了。</p><p>举个例子：你的项目中需要用到 Redis 来做缓存，你对照着官网简单了解并实践了简单使用 Redis 之后，你去看了 Redis 对应的八股文。你发现 Redis 可以用来做限流、分布式锁，于是你去在项目中实践了一下并掌握了对应的八股文。紧接着，你又发现 Redis 内存不够用的情况下，还能使用 Redis Cluster 来解决，于是你就又去实践了一下并掌握了对应的八股文。</p><h2 id="面试八股文"><a href="#面试八股文" class="headerlink" title="面试八股文"></a>面试八股文</h2><h3 id="♠基础篇"><a href="#♠基础篇" class="headerlink" title="♠基础篇"></a>♠基础篇</h3><ol><li><p><strong>说一下java的特点</strong></p><p><strong>Java是一门面向对象的编程语言</strong>。（封装，继承，多态）</p><p><strong>Java具有平台独立性和移植性</strong>。</p><ul><li>Java有一句口号：<code>Write once, run anywhere</code>，一次编写、到处运行。这也是Java的魅力所在。而实现这种特性的正是Java虚拟机JVM。已编译的Java程序可以在任何带有JVM的平台上运行。你可以在windows平台编写代码，然后拿到linux上运行。只要你在编写完代码后，将代码编译成.class文件，再把class文件打成Java包，这个jar包就可以在不同的平台上运行了。</li></ul><p><strong>Java具有稳健性</strong>。</p><ul><li>Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。</li><li>异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用<code>try/catch/finally</code>语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务</li></ul><p><strong>Java支持多线程</strong></p><ul><li>C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持；</li></ul></li><li><p><strong>说一下JVM、JDK 和 JRE 有什么区别？</strong></p><p><code>JVM</code>：Java Virtual Machine，Java虚拟机，Java程序运行在Java虚拟机上。针对不同系统的实现（Windows，Linux，macOS）不同的JVM，因此Java语言可以实现跨平台。</p><p><code>JRE</code>： Java 运⾏时环境。它是运⾏已编译 Java 程序所需的所有内容的集合，包括 Java 虚拟机（JVM），Java 类库，Java 命令和其他的⼀些基础构件。但是，它不能⽤于创建新程序。</p><p><code>JDK</code>: Java Development Kit，java开发工具包。它拥有 JRE 所拥有的⼀切，还有编译器（javac）和⼯具（如 javadoc 和 jdb）。它能够创建和编译程序。</p><p>简单来说，JDK包含JRE，JRE包含JVM。</p></li></ol><h3 id="♠JVM篇"><a href="#♠JVM篇" class="headerlink" title="♠JVM篇"></a>♠JVM篇</h3><h3 id="♠多线程-并发篇"><a href="#♠多线程-并发篇" class="headerlink" title="♠多线程&amp;并发篇"></a>♠多线程&amp;并发篇</h3><h3 id="♠Spring篇"><a href="#♠Spring篇" class="headerlink" title="♠Spring篇"></a>♠Spring篇</h3><h3 id="♠MyBatis篇"><a href="#♠MyBatis篇" class="headerlink" title="♠MyBatis篇"></a>♠MyBatis篇</h3><h3 id="♠SpringBoot篇"><a href="#♠SpringBoot篇" class="headerlink" title="♠SpringBoot篇"></a>♠SpringBoot篇</h3><h3 id="♠MySQL篇"><a href="#♠MySQL篇" class="headerlink" title="♠MySQL篇"></a>♠MySQL篇</h3><h3 id="♠Redis篇"><a href="#♠Redis篇" class="headerlink" title="♠Redis篇"></a>♠Redis篇</h3><h3 id="♠RabbitMQ篇"><a href="#♠RabbitMQ篇" class="headerlink" title="♠RabbitMQ篇"></a>♠RabbitMQ篇</h3><h3 id="♠SpringMVC篇"><a href="#♠SpringMVC篇" class="headerlink" title="♠SpringMVC篇"></a>♠SpringMVC篇</h3><h3 id="♠SpringCloud篇"><a href="#♠SpringCloud篇" class="headerlink" title="♠SpringCloud篇"></a>♠SpringCloud篇</h3><h3 id="♠设计模式篇"><a href="#♠设计模式篇" class="headerlink" title="♠设计模式篇"></a>♠设计模式篇</h3><h3 id="♠Linux篇"><a href="#♠Linux篇" class="headerlink" title="♠Linux篇"></a>♠Linux篇</h3><h3 id="♠Tomcat篇"><a href="#♠Tomcat篇" class="headerlink" title="♠Tomcat篇"></a>♠Tomcat篇</h3><h3 id="♠计算机网络篇"><a href="#♠计算机网络篇" class="headerlink" title="♠计算机网络篇"></a>♠计算机网络篇</h3><h3 id="♠数据结构与算法篇"><a href="#♠数据结构与算法篇" class="headerlink" title="♠数据结构与算法篇"></a>♠数据结构与算法篇</h3><h3 id="♠Git篇"><a href="#♠Git篇" class="headerlink" title="♠Git篇"></a>♠Git篇</h3><h3 id="♠Nginx篇"><a href="#♠Nginx篇" class="headerlink" title="♠Nginx篇"></a>♠Nginx篇</h3><h1 id="java学习路线"><a href="#java学习路线" class="headerlink" title="java学习路线"></a>java学习路线</h1><p><img src="http://img.topjavaer.cn/img/20220530232715.png" alt="学习路线"></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
